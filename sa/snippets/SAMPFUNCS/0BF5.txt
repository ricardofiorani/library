// Example: Edit Dialog Info during RPC Reception
{$USE CLEO}
{$USE SAMPFUNCS}
NOP

// wait for SAMP to fully initialize
REPEAT
    wait 100
UNTIL SAMP_IS_AVAILABLE

if not SAMP_RAKNET_HOOK_INCOMING_RPC {callbackLabel} @RPC_In
then TERMINATE_THIS_CUSTOM_SCRIPT
end

// We don't need an infinite loop for this example. So we pause the thread to lessen the workload for our processor
SF_PAUSE_THREAD {id} 0 // Pauses the main thread
// This part of the main thread will not be reached unless the main thread is resumed
TERMINATE_THIS_CUSTOM_SCRIPT

:RPC_In // all received Packet will detour here first
    int packetId = SAMP_RAKNET_HOOK_GET_PARAM {type} SampRakNetHookParam.PacketId
    if packetId == SampRpc.ScrShowDialog
    then
        Bitstream bitStream = SAMP_RAKNET_HOOK_GET_PARAM {type} SampRakNetHookParam.Bitstream
        SAMP_RAKNET_BITSTREAM_SKIP_BITS bitStream {bitCount} 24 // skip dialogID, dialogStyle
        int strLen

        strLen = SAMP_RAKNET_BITSTREAM_READ bitStream {dataType} SampBitStreamDataType.Byte
        strLen *= 8 // convert bits to Bytes
        SAMP_RAKNET_BITSTREAM_SKIP_BITS bitStream {bitCount} strLen // skip dialogTitle

        strLen = SAMP_RAKNET_BITSTREAM_READ bitStream {dataType} SampBitStreamDataType.Byte
        strLen *= 8 // convert bits to Bytes
        SAMP_RAKNET_BITSTREAM_SKIP_BITS bitStream {bitCount} strLen // skip dialogButton1

        strLen = SAMP_RAKNET_BITSTREAM_READ bitStream {dataType} SampBitStreamDataType.Byte
        strLen *= 8 // convert bits to Bytes
        SAMP_RAKNET_BITSTREAM_SKIP_BITS bitStream {bitCount} strLen // skip dialogButton2

        int saveWriteOffset = SAMP_RAKNET_BITSTREAM_GET_WRITE_OFFSET myBitstream
        int readOffset = SAMP_RAKNET_BITSTREAM_GET_READ_OFFSET bitStream
        SAMP_RAKNET_BITSTREAM_SET_WRITE_OFFSET bitStream {offset} readOffset
        SAMP_RAKNET_BITSTREAM_ENCODE_STRING bitStream {buffer} "AJOM Test~n~~n~The info has now been changed into this text!" {buffersize} 61

        SAMP_RAKNET_BITSTREAM_RESET_READ_POINTER bitStream // This assures that RakNet will read the entire data once the detour finishes
        SAMP_RAKNET_BITSTREAM_SET_WRITE_OFFSET bitStream {offset} saveWriteOffset // ALWAYS Set the Write Offset to its original value OR ELSE GTA SA WILL CRASH
    end
RAKNET_HOOK_RETURN {unblockData} true // end this callback and allow RakNet to process the data