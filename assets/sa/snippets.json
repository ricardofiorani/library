{
  "1.0": {
    "0x40FDD0": "int pVector1 = get_label_pointer @cvector1\nint pVector2 = get_label_pointer @cvector2\nint pVector3 = get_label_pointer @cvector3\n\nCVector_ctor(pVector1, 10.0, 20.0, 30.0)\nCVector_ctor(pVector2, 15.0, 25.0, 35.0)\nCVector_Add(pVector3, pVector1, pVector2)\n\nfloat x = read_memory_with_offset pVector3 0 4\nfloat y = read_memory_with_offset pVector3 4 4\nfloat z = read_memory_with_offset pVector3 8 4\n\nprint_help_formatted \"vec (%.2f, %.2f, %.2f)\" x y z\n\njump @skip\n\nconst sizeOf_CVector = 12\n:cvector1\nhex\n00(sizeOf_CVector)\nend\n:cvector2\nhex\n00(sizeOf_CVector)\nend\n:cvector3\nhex\n00(sizeOf_CVector)\nend\n\n:skip",
    "0x4207A0": "float val = asin(0.5)",
    "0x43A0B0": "int pCheatCar = CCheat_VehicleCheat(#NRG500)\nCar hCheatCar = get_vehicle_ref {address} pCheatCar\nBlip hCarBlip = add_blip_for_car {vehicle} hCheatCar",
    "0x43FA00": "if is_game_first_start  // enex will persist when reloading\nthen \n    int EnexIndex = CEntryExitManager_AddOne(2459.5, -1691.6, 12.5, 0.0, 1.0, 1.0, 8, 2459.5, -1689.5, 12.5, 0.0, 0, 4, 0, 0, 24, 0, 'RYDERS')\n    if EnexIndex == 0\n    then print_help_formatted \"~r~Error: No room in pool for added enex.\"\n    else print_help_formatted \"Index %d\" EnexIndex\n    end\nend",
    "0x444300": "while true\n    wait 0\n    if test_cheat \"i\"\n    then\n        wait 0\n        if or\n            is_gang_war_going_on\n            is_gang_war_fighting_going_on\n        then\n            CGangWars_EndGangWar(true)\n            Blip hDefenseBlip = read_memory 0x96AB98 size 4 virtual_protect 0  // CGangWars__RadarBlip\n            if does_blip_exist hDefenseBlip\n            then remove_blip hDefenseBlip\n            end    \n        else\n            CGangWars_StartDefensiveGangWar()    \n        end\n    end\nend",
    "0x446050": "while true\n    wait 0\n    if test_cheat \"o\"\n    then\n        wait 0\n        if or\n            is_gang_war_going_on\n            is_gang_war_fighting_going_on\n        then\n            CGangWars_EndGangWar(true)\n            Blip hDefenseBlip = read_memory 0x96AB98 size 4 virtual_protect 0  // CGangWars__RadarBlip\n            if does_blip_exist hDefenseBlip\n            then remove_blip hDefenseBlip\n            end    \n        else\n            CGangWars_StartOffensiveGangWar()    \n        end\n    end\nend",
    "0x4464C0": "CGangWars_EndGangWar(true)\nBlip hDefenseBlip = read_memory 0x96AB98 size 4 virtual_protect 0\nif does_blip_exist hDefenseBlip\nthen remove_blip hDefenseBlip\nend",
    "0x448900": "const cleo_player = 0\n\nwhile true\n    wait 200\n    if is_player_playing cleo_player\n    then \n        int pos = FindPlayerCentreOfWorld(cleo_player)\n        int bInGarage = CGarages_IsPointWithinHideOutGarage(pos)\n        if is_bit_set bInGarage {bitIndex} 0\n        then \n            add_score cleo_player {money} 1\n        end\n    end\nend",
    "0x4563A0": "int pos = FindPlayerCentreOfWorld(-1)\nCPickups_RemoveUnnecessaryPickups(pos, 100.0)\nprint_help_string {text} \"Pickups cleared\"",
    "0x470740": "int DealerIndex = CStreamedScripts_FindStreamedScript(0xA47B60, 'DEALER')\nprint_help_formatted \"Index of streamed DEALER script: %d\" DealerIndex",
    "0x504F80": "int playerChar = get_player_char 0\nint charPtr = get_ped_pointer playerChar\nint weaponAudioPtr = charPtr + 0x394\nconst weaponType = 22 // Pistol\nCAEWeaponAudioEntity_WeaponFire(weaponAudioPtr, weaponType, charPtr, 145)",
    "0x5625F0": "const cleo_player = 0\nint cleo_char = get_player_char cleo_player\nfloat posX, posY, posZ\n\nwhile true\n    wait 0\n    if\n        test_cheat \"p\"\n    then\n        posX, posY, posZ = get_char_coordinates cleo_char\n        int numPolice = CWanted_WorkOutPolicePresence(posX, posY, posZ, 14.0) \n        print_help_formatted \"Number of police in range: %d\" numPolice\n    end\nend",
    "0x5693F0": "spawn_vehicle_by_cheating #INFERNUS\n\nint pos = FindPlayerCentreOfWorld(-1)\nint addr = CWorld_FindNearestObjectOfType(#INFERNUS, pos, 50.0, false, false, {vehicles} true, false, false, false)\n\nif addr > 0\nthen\n    Car infernus = get_vehicle_ref addr\n    Blip b = add_blip_for_car infernus\nelse\n    print_help_formatted \"Car not found\"\nend",
    "0x569660": "Char player_char = get_player_char 0\n\nwhile true\n    wait 0\n    \n    float x, y, _\n    x, y, _ = get_char_coordinates player_char\n\n    float z = CWorld_FindGroundZForCoord(x, y)\n    use_text_commands true\n    display_text_formatted 10.0 0 \"Z coord: %.2f\" z \n    \nend // while",
    "0x56E010": "while true\n    wait 0\n    int pVector = get_label_pointer @pos_vec\n    int pPosVector = FindPlayerCoors(pVector, -1)\n    PrintVector(pPosVector) // pVector and pPosVector point to the same memory\nend\n\n:pos_vec\nhex\n00(12)\nend\n\nfunction PrintVector(vec: int {CVector})\n    float x = Memory.ReadWithOffset(vec, 0, 4)\n    float y = Memory.ReadWithOffset(vec, 4, 4)\n    float z = Memory.ReadWithOffset(vec, 8, 4)\n\n    use_text_commands true\n    display_text_formatted 0 0 \"x: %.2f y: %.2f z: %.2f\" x y z\nend",
    "0x56E0D0": "while true\n    wait 0\n    int vehicle = FindPlayerVehicle(-1, false)\n\n    use_text_commands true\n    display_text_formatted 0 0 \"vehicle: %d\" vehicle\nend",
    "0x56E250": "while true\n    wait 0\n    int pos = FindPlayerCentreOfWorld(-1)\n    PrintVector(pos)\nend\n\nfunction PrintVector(vec: int {CVector})\n    float x = Memory.ReadWithOffset(vec, 0, 4)\n    float y = Memory.ReadWithOffset(vec, 4, 4)\n    float z = Memory.ReadWithOffset(vec, 8, 4)\n\n    use_text_commands true\n    set_text_wrapx 640.0\n    display_text_formatted 0 0 \"x: %.2f y: %.2f z: %.2f\" x y z\nend",
    "0x6D2370": "const modelId = #COPCARLA\nint vehicle = CCheat_VehicleCheat(modelId)\nint res = CVehicle_IsLawEnforcementVehicle(vehicle)\nif is_bit_set res 0\nthen\n    print_formatted \"%d is law enforcement\" 5000 modelId\nelse\n    print_formatted \"%d is not law enforcement\" 5000 modelId\nend\n",
    "0x6E3290": "const UPGRADE_MODEL = #WHEEL_LR1\nrequest_model UPGRADE_MODEL\nload_all_models_now\n\nint pCheatCar = CCheat_VehicleCheat(#MTBIKE)\nif \n    pCheatCar <> 0\nthen \n    CVehicle_AddVehicleUpgrade(pCheatCar, UPGRADE_MODEL)\nelse\n    print_help_formatted \"~r~Vehicle cannot be spawned by cheat at this location.\"\nend",
    "0x6F3240": "CarGenerator hJeffersonNRG = create_car_generator 2243.75 -1258.5 24.0 {heading} 90.0 {modelId} #NRG500 {Colors} 86 86 {forceSpawn} True {alarm} 0 {doorLock} 0 {minDelay} 0 {maxDelay} 10000 // Jefferson Alley\nswitch_car_generator hJeffersonNRG {amount} 101\nint pCargen = CCarGenerator_Get(hJeffersonNRG)\nwrite_memory_with_offset {address} pCargen {offset} 0x1C {size} 1 {value} 0xFE // won't save\nwait 1000\nCTheCarGenerators_RemoveCarGenerators(0xFE)",
    "0x6FDEA0": "Player p = 0\nChar playerChar = p.GetChar()\n\nwhile true\n    wait 0\n    if \n        playerChar.IsInAnyCar()\n    then\n        int vehicle = playerChar.StoreCarIsInNoSave()\n        int pVehicle = Memory.GetVehiclePointer(vehicle)\n        \n        int hours, minutes \n        hours, minutes = Clock.GetTimeOfDay()\n        longstring plateText\n        string_format plateText \" %d %d \" hours minutes\n        updateCarPlateText(pVehicle, plateText)\n    end    \nend // while\n\n\nfunction updateCarPlateText(pVehicle: int, plateText: string)\n    unloadCarPlateTexture(pVehicle)\n    int plateTexture = CCustomCarPlateMgr_CreatePlateTexture(plateText, -1)\n    write_memory_with_offset {address} pVehicle {offset} 0x588 {size} 4 {value} plateTexture\nend\n\nfunction unloadCarPlateTexture(pVehicle: int)    \n    int pCustomCarPlate = read_memory_with_offset {address} pVehicle {offset} 0x588 {size} 4\n    if is_truthy pCustomCarPlate\n    then\n        RwTextureDestroy(pCustomCarPlate)\n    end\nend",
    "0x73A3E0": "int modelIdx = get_weapontype_model {weapon_type} WeaponType.Ak47\nrequest_model {modelId} modelIdx\nload_all_models_now\ngive_weapon_to_char $scplayer {weaponType} WeaponType.Ak47 {ammo} 999999\nmark_model_as_no_longer_needed {modelId} modelIdx\n\nwhile true\n    wait 50\n    \n    WEAPON_ADD_SHELL($scplayer, 7) \nend\n\nfunction WEAPON_ADD_SHELL(charHandle :int, weaponSlot :int)\n    float pos[3]\n    pos[0], pos[1], pos[2] = get_offset_from_char_in_world_coords charHandle {offset} 0.0 1.0 1.0\n\n    float dir[2]\n    dir[0] = 1.0\n    dir[1] = 0.0\n    \n    int posPtr = get_var_pointer pos\n    int dirPtr = get_var_pointer dir\n    \n    int pedPtr = get_ped_pointer {char} charHandle\n\n    int weaponPtr = pedPtr + 0x5A0 // CPed.m_aWeapons[]\n    weaponSlot *= 0x1C // size of CWeapon\n    weaponPtr += weaponSlot\n        \n    CWeapon_AddGunshell(weaponPtr, pedPtr, posPtr, dirPtr, 5.0)\nend\n",
    "0x82258E": "while true\n    wait 0\n    Text.UseCommands(true)\n    int i = atoi('42')\n    Text.DisplayFormatted(100.0, 100.0, \"%d\", i)\nend",
    "0x822650": "while true\n    wait 0\n    Text.UseCommands(true)\n    int s = strstr('Test String', 'Str')\n    Text.DisplayFormatted(100.0, 100.0, s)\nend\n",
    "0x823CEE": "while true\n    wait 0\n    Text.UseCommands(true)\n    float f = atof('10.5')\n    Text.DisplayFormatted(100.0, 100.0, \"%.1f\", f)\nend"
  },
  "CLEO": {
    "0A8E": "<%= output1 %> = <%= input1 %> + <%= input2 %>",
    "0A8F": "<%= output1 %> = <%= input1 %> - <%= input2 %>",
    "0A90": "<%= output1 %> = <%= input1 %> * <%= input2 %>",
    "0A91": "<%= output1 %> = <%= input1 %> / <%= input2 %>",
    "0A94": "load_and_launch_custom_mission \"my_mission\" // starts cleo\\my_mission.cm file\n\n// wait for mission script to end\nrepeat\n    wait 250\nuntil $onmission == false",
    "0AA2": "int iTmp\nif and\n    not iTmp = load_dynamic_library {fileName} \"SilentPatchIII.asi\"\n    not iTmp = load_dynamic_library {fileName} \"SilentPatchVC.asi\"\n    not iTmp = load_dynamic_library {fileName} \"SilentPatchSA.asi\"\nthen\n    print_help_formatted \"SilentPatch not detected!\"\nend",
    "0AA4": "int libCleo\nif\n    not libCleo = load_dynamic_library \"CLEO.asi\"\nthen\n    print_help_formatted {text} \"~r~ERROR:~s~ Failed to load CLEO.asi\"\n    terminate_this_script\nend\n\n\n// approach 1\nint procAddr\nif \n    not procAddr = get_dynamic_library_procedure \"_CLEO_GetVersion@0\" {library} libCleo\nthen\n    print_help_formatted {text} \"~r~ERROR:~s~ Failed to get CLEO_GetVersion procedure\"\n    terminate_this_script\nend\n\nint ver = call_function_return procAddr {params} 0 {pop} 0\nprint_help_formatted {text} \"CLEO version is %X\" ver\n\n\nwait 3000\n\n\n// approach 2 - use Sanny Builder 4 foreign functions syntax\nfunction Export_Arg_0_Ret<stdcall>() : int // define function type\nExport_Arg_0_Ret CLEO_GetGameDirectory // variable\nif\n    not CLEO_GetGameDirectory = get_dynamic_library_procedure \"_CLEO_GetGameDirectory@0\" {library} libCleo\nthen\n    print_help_formatted {text} \"~r~ERROR:~s~ Failed to get CLEO_GetGameDirectory procedure\"\n    terminate_this_script\nend\n\nint dir = CLEO_GetGameDirectory()\nprint_help_formatted {text} \"Game directory is: %s\" dir",
    "0AB0": "while true\n    wait 0\n\n    if\n        is_key_pressed {keyCode} KeyCode.F8\n    then\n        print_help_formatted {text} \"~r~Key pressed!\"\n\n        \n        // wait for key release\n        while is_key_pressed {keyCode} KeyCode.F8\n            wait 0\n        end\n        \n        print_help_formatted {text} \"~g~Key released!\"\n    end\nend",
    "0AB1": "while true\n    wait 250\n    \n    if and\n        is_player_playing $player1\n        test_cheat \"gun\"\n    then\n        int ammo = GIVE_PLAYER_WEAPON(38) // this is actually CLEO_CALL command\n        print_help_formatted {text} \"%d bullets!\" {args} ammo\n    end\nend\n\nfunction GIVE_PLAYER_WEAPON(weaponType :int) : int\n    int modelIdx = get_weapontype_model {weapon_type} weaponType\n    request_model {modelId} modelIdx\n    load_all_models_now\n    \n    give_weapon_to_char $scplayer {weaponType} weaponType {ammo} 100\n    \n    mark_model_as_no_longer_needed {modelId} modelIdx\n    \n    // check and return ammo count\n    int ammo = get_ammo_in_char_weapon $scplayer {weaponType} weaponType\n    cleo_return 1 ammo\nend",
    "0ACC": "print_string {text} \"Hello from ~y~CLEO~s~!\" {time} 5000",
    "0AD1": "while true\n    wait 0\n    \n    char playerChar = get_player_char 0 // player 1\n    \n    float x, y, z\n    x, y, z = get_char_coordinates playerChar\n    \n    int worldIdx = get_char_area_visible playerChar\n    \n    print_formatted_now {format} \"Position: %0.1f %0.1f %0.1f ~n~ Interior: %d\" {time} 50 {args} x y z worldIdx\nend",
    "0AD3": "int buf = allocate_memory 64\nstring_format buf \"%d + %d = %d\" 2 2 4\nfree_memory buf",
    "0AD7": "debug_on // enable trace command\n\nif\n    int fileaHandle = open_file {filePathName} \"root:\\cleo\\.cleo.log\" {mode} \"rt\"\nthen\n    int buffer = allocate_memory {size} 64\n    if\n        read_string_from_file fileaHandle {storeTo} buffer {maxLength} 64\n    then\n        trace \"Read data: %s\" buffer\n    else\n        trace \"Failed to read data\"\n    end\n    \n    // cleanup\n    free_memory {address} buffer\n    close_file fileaHandle\nelse\n    trace \"Failed to open the file\"\nend",
    "0AD9": "write_formatted_string_to_file outputFile {format} \"Timer is %d.%c\" {args} TimerA 0x0A // end of line",
    "0ADC": "while true\n    wait 0\n    \n    if \n        test_cheat \"TEST\"\n    then\n        print_help_string {text} \"Cheat activated\"\n    end\nend",
    "0AE1": "float x,y,z\nChar ped\n\nwhile true\n    wait 0\n    \n    if\n        test_cheat \"1\"\n    then\n        get_active_camera_coordinates {store_to} x y z\n        \n        if\n            get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 30.0 {find_next} false {skip_dead} true {store_to} ped\n        then\n            explode_char_head ped // the first one\n            \n            while get_random_char_in_sphere_no_save_recursive {pos} x y z {radius} 30.0 {find_next} true {skip_dead} true {store_to} ped\n                explode_char_head ped\n            end\n        else\n            print_formatted_now \"First not found\" {time} 4000\n        end\n    end\nend",
    "0AE2": "while true\n    wait {time} 100\n\n    float x, y, z\n    x, y, z = get_active_camera_coordinates\n    \n    int color = generate_random_int_in_range {min} 0 {max} 9\n    \n    // iterate near cars\n    int handle = get_random_car_in_sphere_no_save_recursive {pos} x y z {radius} 40.0 {findNext} false {skipWrecked} true // initialize search, get first\n    while handle <> -1 // found!\n        change_car_colour handle {color1} color {color2} color\n        \n        handle = get_random_car_in_sphere_no_save_recursive {pos} x y z {radius} 40.0 {findNext} true {skipWrecked} true // get next\n    end\nend",
    "0AE3": "while true\n    wait {time} 0 // once every render frame\n\n    float x, y, z\n    x, y, z = get_active_camera_coordinates\n        \n    // iterate near objects\n    int handle = get_random_object_in_sphere_no_save_recursive {pos} x y z {radius} 30.0 {findNext} false // initialize search, get first\n    while handle <> -1 // found!\n        DRAW_OBJECT_INFO(handle) // call function for every found object\n\n        handle = get_random_object_in_sphere_no_save_recursive {pos} x y z {radius} 30.0 {findNext} true // get next\n    end\nend\n\n\n// display text at 3d coordinates\nfunction DRAW_OBJECT_INFO(obj :int)\n    int modelIdx = get_object_model obj\n\n    float pos[3]\n    pos[0], pos[1], pos[2] = get_object_coordinates obj\n\n    float screenPos[2]\n    float screenSize[2]\n    screenPos[0], screenPos[1], screenSize[0], screenSize[1] = convert_3d_to_screen_2d {pos} pos[0] pos[1] pos[2] {nearClip} true {farClip} true\n    \n    use_text_commands {state} true\n    \n    // calculate our font proportions\n    screenSize[0] = screenSize[1]\n    screenSize[0] *= 0.3 \n    set_text_scale {widthScale} screenSize[0] {heightScale} screenSize[1]\n    \n    set_text_centre {state} true\n    \n    set_text_colour {rgb} 255 255 0 {alpha} 255\n    set_text_edge {size} 1 {RGBA} 0 0 0 64\n    \n    display_text_formatted {offsetLeft} screenPos[0] {offsetTop} screenPos[1] {format} \"%d\" {args} modelIdx\nend",
    "0DD5": "get_platform 0@\nprint_help_formatted \"Platform is %d\" 0@",
    "2000": ":my_funct\n    get_cleo_arg_count 31@\n    print_formatted_now \"called with %d arguments\" {time} 3000 {args} 31@\ncleo_return",
    "2002": "cleo_return_with true retArgs 0@",
    "2003": "// get player's current vehicle handle\n// function sets condition result\n:FUNC_GET_PLAYER_CAR\n    if\n        not does_char_exist $scplayer\n    then\n        cleo_return_fail\n    end\n\n    if\n        not is_char_sitting_in_any_car $scplayer\n    then\n        cleo_return_fail\n    end\n\n    int car_handle = store_car_char_is_in_no_save $scplayer\ncleo_return_with true {args} car_handle"
  },
  "CLEO+": {
    "0E1D": "const Key_F11=122\nwhile true\n    wait 0\n    if is_key_just_pressed Key_F11\n    then\n        if is_on_mission\n        then set_on_mission False\n        else set_on_mission True\n        end\n    end\nend",
    "0E2A": "{$USE CLEO+}\n\nCleoBlip ogLocBlip = add_cleo_blip {rwTextureOrRadarSprite} 28 {x} 2486.0 {y} -1650.0 {short} false {red} 64 {green} 255 {blue} 128 {alpha} 255\n\nload_texture_dictionary 'LD_TATT' // in models\\txd\\\nload_sprite 1 \"5cross2\" // Rose\nint roseTXD = get_texture_from_sprite {sprite} 1\nCleoBlip bRose = add_cleo_blip {rwTexture} roseTXD {pos} 2598.5 -1650.0 {short} True {rgba} 255 0 0 255\n\nload_sprite 2 \"4spider\"\nint spiderTXD = get_texture_from_sprite {sprite} 2\nwrite_memory 0xB4E690 4 spiderTXD False // CVehicleModelInfo::ms_pLightsOnTexture\nCleoBlip bSpider = add_cleo_blip {RadarSprite} -2 {pos} 2598.5 -1750.0 {short} True {rgba} 0 0 255 255 // use the sprite index but negative\nremove_texture_dictionary\n\n{$USE newOpcodes}\nif\n    int myTXD = load_texture_from_png_file {png} \"CLEO\\myImage.png\"\nthen\n    CleoBlip bBlip = add_cleo_blip {rwTexture} myTXD {pos} 2598.5 -1850.0 {short} True {rgba} 255 255 255 255\nend",
    "0E33": "int temp_handle\nif\n    not temp_handle = get_pickup_this_coord {x} 2468.9 {y} -1789.0 {z} 13.4 {onlyValid} true\nthen\n    temp_handle = Pickup.CreateWithAmmo(#M4, PickupType.OnStreetSlow, 500, 2468.9, -1789.0, 13.4)\nend",
    "0E3D": "const Key_F11=122\nwhile true\n    wait 0\n    if is_key_just_pressed Key_F11\n    then\n        if is_on_mission\n        then set_on_mission False\n        else set_on_mission True\n        end\n    end\nend",
    "0E3F": "while true\n    wait 0\n    \n    float pos[3]\n    pos[0], pos[1], pos[2] = get_offset_from_char_in_world_coords $scplayer {offset} 0.0 0.0 1.0 // above head\n    \n    float screenPos[2]\n    float screenSize[2]\n    screenPos[0], screenPos[1], screenSize[0], screenSize[1] = convert_3d_to_screen_2d {pos} pos[0] pos[1] pos[2] {nearClip} true {farClip} true\n    \n    use_text_commands {state} true\n    \n    // calculate our font proportions\n    screenSize[0] = screenSize[1]\n    screenSize[0] *= 0.3 \n    set_text_scale {widthScale} screenSize[0] {heightScale} screenSize[1]\n    \n    set_text_edge {size} 1 {RGBA} 0 0 0 255\n    set_text_centre {state} true\n    display_text_formatted {offsetLeft} screenPos[0] {offsetTop} screenPos[1] {format} \"Player\"\nend",
    "0E4E": "{$USE CLEO+}\n\nint screenTimer\ndisplay_onscreen_timer_local {var_timer} screenTimer {direction} TimerDirection.Down\nscreenTimer = 10000 // 10 seconds\nset_timer_beep_countdown_time_local {var_timer} screenTimer {timeInSec} 6 // start beeping when less than 6 seconds left\n\nwhile true\n    wait 0\n    \n    print_formatted_now {text} \"Peek time left: %d\" {time} 3000 {args} screenTimer\n    \n    if\n        screenTimer == 0\n    then\n        print_string_now {text} \"Time is up!\" {time} 3000\n        break // exit the loop\n    end    \nend\n\nclear_onscreen_timer_local {var_timer} screenTimer",
    "0E4F": "{$USE CLEO+}\n\nadd_text_label {dynamicKey} 'TMR_TXT' {text} \"~r~Explosion\"\n\nint screenTimer\ndisplay_onscreen_timer_with_string_local {var_timer} screenTimer {direction} TimerDirection.Down {text} 'TMR_TXT'\nscreenTimer = 10000 // 10 seconds\nset_timer_beep_countdown_time_local {var_timer} screenTimer {timeInSec} 6 // start beeping when less than 6 seconds left\n\nwhile true\n    wait 0\n\n    print_formatted_now {text} \"Peek time left: %d\" {time} 100 {args} screenTimer\n\n    if\n        screenTimer == 0\n    then\n        print_string_now {text} \"~r~BOOM!\" {time} 3000\n        break // exit the loop\n    end\nend\n\nclear_onscreen_timer_local {var_timer} screenTimer",
    "0E5F": "const player=0\nint char, car\nfloat x,y,z\n\nget_player_char player store_to char\nrepeat\n    print_formatted \"Find a car to honk.\" 1000\n    wait 1000\nuntil is_char_in_any_car char\n\nstore_car_char_is_in_no_save char store_to car\ntimera = 0\nrepeat\n    wait 0\n    car_horn car\nuntil timera > 5000",
    "0E60": "set_camera_control false\nprint_help_formatted \"Camera control is OFF\"\nwait 10000\nset_camera_control true\nprint_help_formatted \"Camera control is ON\"",
    "0E83": "const player=0\nint char, weaponInfo, flags\nget_player_char player store_to char\n\nget_current_char_weaponinfo char store_to weaponInfo\nget_weaponinfo_flags weaponInfo store_to flags\nprint_help_formatted \"WeaponInfo Flags %.5X\" flags",
    "0E84": "const Pistol=22, Std=1\nint weaponInfo, totalClip\n\nget_weaponinfo Pistol skill Std store_to weaponInfo\nget_weaponinfo_total_clip weaponInfo store_to totalClip\nprint_help_formatted \"Total Clip %d\" totalClip",
    "0E85": "const player=0\nint char, weaponInfo, model1, model2\nget_player_char player store_to char\n\nget_current_char_weaponinfo char store_to weaponInfo\nget_weaponinfo_models weaponInfo store_to model1 model2\nprint_help_formatted \"Weapon Models~n~%d~n~%d\" model1 model2",
    "0E86": "const player=0\nint char, weaponInfo, flags\nget_player_char player store_to char\n\nget_current_char_weaponinfo char store_to weaponInfo\nget_weaponinfo_flags weaponInfo store_to flags\nprint_help_formatted \"WeaponInfo Flags %.5X\" flags",
    "0E87": "const player=0\nint char, weaponInfo, animGroup\nget_player_char player store_to char\n\nget_current_char_weaponinfo char store_to weaponInfo\nget_weaponinfo_animgroup weaponInfo store_to animGroup\nprint_help_formatted \"AnimGroup %d\" animGroup",
    "0E88": "const Pistol=22, Std=1\nint weaponInfo, totalClip\n\nget_weaponinfo Pistol skill Std store_to weaponInfo\nget_weaponinfo_total_clip weaponInfo store_to totalClip\nprint_help_formatted \"Total Clip %d\" totalClip",
    "0E89": "const player=0\nint char, weaponInfo, fireType\nget_player_char player store_to char\n\nget_current_char_weaponinfo char store_to weaponInfo\nget_weaponinfo_fire_type weaponInfo store_to fireType\nprint_help_formatted \"FireType %d\" fireType",
    "0E8A": "const player=0\nint char, weaponInfo, slot\nget_player_char player store_to char\n\nget_current_char_weaponinfo char store_to weaponInfo\nget_weaponinfo_slot weaponInfo store_to slot\nprint_help_formatted \"Weapon Slot %d\" slot",
    "0E8B": "const player=0\nint char, weaponState\nget_player_char player store_to char\n\nget_char_weapon_state char store_to weaponState\nprint_help_formatted \"Weapon State %d\" weaponState",
    "0E8C": "const player=0\nint char, weaponClip\nget_player_char player store_to char\n\nget_char_weapon_clip char store_to weaponClip\nprint_help_formatted \"Weapon Clip %d\" weaponClip",
    "0E8D": "const player=0\nrepeat\n    wait 0\nuntil is_any_fire_button_pressed pad player\nprint_help_formatted \"primary or secondary fire button is pressed\"",
    "0E92": "const player = 0\nint char\nget_player_char player store_to char\n\nwhile true\n    wait 0\n    if and\n        not is_char_entering_any_car char\n    \tnot is_char_in_any_car char\n        is_char_really_in_air char                                                       \n    then                                                                                        \n        print_formatted \"Char is REALLY in air\" 2000\n        wait 2000  \n    end\nend",
    "0E93": "const player=0\nint char, car\nget_player_char player store_to char\n\nwhile true\n    wait 0\n    if                                                                          \n        is_char_in_any_car char                                    \n    then                                                                        \n        get_car_char_is_using char store_to car                    \n        if                                                                        \n            is_car_really_in_air car                                           \n        then                                                                      \n            print_formatted \"Car is REALLY in air\" 2000\n            wait 2000  \n        end                                                                       \n    end\nend",
    "0E94": "const player=0, CJ_STEAL_TV=2648 \nint char, object\nfloat x,y,z\n\nget_player_char player store_to char\nget_offset_from_char_in_world_coords char 0.0 2.0 0.0 x y z\ncreate_object_no_save CJ_STEAL_TV at x y z offset false ground false store_to object\nset_object_as_stealable object true\nprint_formatted \"Press ~k~~VEHICLE_ENTER_EXIT~ to pick up the TV\" time 4000\nwait 4000\n\nwhile true\n    wait 0\n    if                                                                    \n        is_object_really_in_air object                                       \n    then                                                                  \n        print_formatted \"Object is REALLY in air\" 2000\n        wait 2000  \n    end                                                \nend",
    "0E9C": "const ModelName = \"NRG500\"\nint MyModel = get_model_by_name {name} ModelName\nprint_help_formatted \"Model ID of %s = %d\" ModelName MyModel \nwait 3000\n\nconst FakeName = \"OMG999\"\nif MyModel = get_model_by_name {name} FakeName\nthen print_help_formatted \"Model ID of %s = %d\" FakeName MyModel\nelse print_help_formatted \"%s is not a valid model name\" FakeName\nend",
    "0E9D": "const ModelName = 'CopGrl1'\nif is_model_available_by_name {name} ModelName\nthen load_special_character {slotId} 1 {modelName} ModelName\nelse print_help_formatted \"%s is not a valid special character model.\" ModelName \nend",
    "0ED5": "{$CLEO .cs}\n{$USE Cleo+}\n\nset_script_event_car_create {add} true EVENT_ON_CAR_CREATE {varCar} 0@\n\n// main script loop\nwhile true\n    wait {time} 1000\nend\n\n\n// event handler\nfunction EVENT_ON_CAR_CREATE(carHandle: int)\n    if\n        is_emergency_services_vehicle carHandle\n    then\n        int blipHandle = add_blip_for_car {vehicle} carHandle\n        change_blip_colour blipHandle {color} BlipColor.Cyan\n    end\n\n    return_script_event\nend",
    "0ED8": "{$CLEO .cs}\n{$USE Cleo+}\n\ndebug_on // enable trace command\n\nset_script_event_on_menu {add} true {callback} EVENT_ON_MENU {varJustPaused} 0@\n\n// main loop\nwhile true\n    wait {time} 1000\n    trace \"main loop\"\nend\n\n\n// event handler\nfunction EVENT_ON_MENU(justPaused: int)\n    trace \"EVENT_ON_MENU: %d\" justPaused\n\n    return_script_event\nend",
    "0F16": "const Key_F11=122\nwhile true\n    wait 0\n    if is_key_just_pressed Key_F11\n    then\n        if is_on_mission\n        then set_on_mission False\n        else set_on_mission True\n        end\n    end\nend"
  },
  "SAMPFUNCS": {
    "0AF6": "SAMP_SPAWN_LOCAL_PLAYER",
    "0AF7": "int sampaddr = SAMP_GET_BASE_ADDRESS",
    "0AF8": "SAMP_ADD_MESSAGE_TO_CHAT {format} \"Script Initialized!\" {color} 0xFF00FFFF {args} // shows a literal string as teal colored text\n\nSAMP_ADD_MESSAGE_TO_CHAT {format} \"WeaponID: %d, Weapon Damage: %f, WeaponName:%s\" {color} 0xFF00FFFF {values} 24 14@ \"Desert Eagle\" // shows a formatted string as teal colored text",
    "0AF9": "// Example 1: Sends a String Constant to Server.\nSAMP_SEND_CHAT_MESSAGE \"Hello Everyone!\"\nSAMP_SEND_CHAT_MESSAGE \"/cmds\"\n\n\n// Example 2: Periodically sends a formatted text message to server\n{$CLEO}\n{$USE SAMPFUNCS}\nNOP\n\nrepeat\n    wait 100\nuntil samp_is_available\n\nint loopIndex = 1\n\nwhile true\n    wait 3000\n    int myID = samp_get_player_id $scplayer\n    int myName = samp_get_player_nickname {id} myID\n    samp_send_chat_message {message} \"%d) My Name is %s.\" {args} loopIndex myName\n    loopIndex++\nend\n",
    "0AFA": "if SAMP_IS_AVAILABLE\nthen\n    // gta_sa is running in SAMP\nelse\n    // samp is still loading its structures, or gta_sa is running in single player\nend\n\n\n// samp.dll takes time to initialize its structures, executing samp-related opcodes will lead to gta_sa crash. To avoid this, we must wait indefinitely until samp is fully initialized.\nrepeat\n    wait 100\nuntil SAMP_IS_AVAILABLE\n\n// the rest of the code",
    "0AFB": "int targetClassID\n// do something to targetClassID\nSAMP_SEND_REQUEST_CLASS {id} targetClassID\n\n\nSAMP_SEND_REQUEST_CLASS {classid} 13",
    "0AFC": "int myCarID\n// do something to myCarID\nSAMP_SEND_SCM_EVENT {carid} myCarID {type} SampScmEvent.PaintJob {param1} 2 {param2} 0 // informs the server that myCarID's paintjob changed into style1 = 2, style2 = 0.",
    "0AFD": "SAMP_SET_SPECIAL_ACTION {actionid} SampSpecialAction.UseCellphone",
    "0AFE": "SAMP_SEND_DEATH_BY_PLAYER {playerid} 15 {weaponid} WeaponType.M4 // tells the server I got killed by player 15 using M4 gun\nSAMP_SEND_DEATH_BY_PLAYER {playerid} 0xFFFF {weaponid} WeaponType.Fall // tells the server that I died naturally by falling\n\nint killerID, killerWeapon\n// do something\nSAMP_SEND_DEATH_BY_PLAYER {playerid} killerID {weaponid} killerWeapon",
    "0AFF": "int myCarID\nint myCarHandle = SAMP_GET_CAR_BY_ID {id} myCarID\n// do something to myCarHandle",
    "0B20": "int targetPlayer, targetChar\n// do something to targetPlayer\ntargetChar = samp_get_player_char_by_id {id} targetPlayer\n// do something to targetChar",
    "0B21": "if SAMP_IS_CHAT_INPUT_OPEN\nthen // chat input is visible\nelse // chat input is hidden\nend",
    "0B22": "SAMP_SET_SEND_RATE {type} SampSendRateType.Onfoot {delay} 150 // periodically synchronize our onfoot data to server every 50ms\nSAMP_SET_SEND_RATE {type} SampSendRateType.InCar {delay} 200 // periodically synchronize our incar data to server every 200ms\nSAMP_SET_SEND_RATE {type} SampSendRateType.Aims {delay} 50 // periodically synchronize our aim data to server every 50ms",
    "0B23": "if SAMP_IS_REMOTE_PLAYER_CONNECTED {id} 15\nthen\n    // player 15 is connected to server\nelse\n    // player 15 does not exist\nend",
    "0B24": "int playerStruct = SAMP_GET_PLAYER_POINTER {playerid} 15 // get pointer to player 15's struct",
    "0B25": "int targetHealth, targetplayer\n// do something to targetplayer\n{health} targetHealth = SAMP_GET_PLAYER_HEALTH {playerid} targetplayer",
    "0B26": "int targetArmor, targetPlayer\n// do something to targetPlayer\n{armor} targetArmor = SAMP_GET_PLAYER_ARMOR {playerid} targetPlayer",
    "0B27": "SAMP_SET_GAMESTATE {statusid} SampGameState.Disconnected // disconnect to server",
    "0B28": "SAMP_SEND_DISCONNECTED {reasonid} SampDisconnectReason.KickedOrBanned",
    "0B29": "SAMP_SET_LOCAL_NICKNAME {nickname} \"ajom\" // locally change our nickname into ajom\n\n\nint strBuf = ALLOCATE_MEMORY {size} 30\n// write something to strBuf as a valid string\nSAMP_SET_LOCAL_NICKNAME {nickname} strBuf // locally change our nickname into ajom\nFREE_MEMORY {address} strBuf",
    "0B2A": "// get my ping\nint myPlayerID, myPing\nint playerChar = get_player_char 0\n{id} myPlayerID = SAMP_GET_PLAYER_ID {handle} playerChar\n{ping} myPing = SAMP_GET_PLAYER_PING {playerid} myPlayerID",
    "0B2B": "// get my player id\nint char = get_player_char 0\nint myID = SAMP_GET_PLAYER_ID {handle} char",
    "0B2C": "int targetHandle\n// do something to targetHandle\nint targetID = SAMP_GET_CAR_ID {handle} targetHandle",
    "0B2F": "int targetPlayer\n// do something to targetPlayer\n\n// passing to an array\nfloat targetCoord[3]\n{xyz} targetCoord = SAMP_GET_STREAMED_OUT_PLAYER_COORDS {playerid} targetPlayer\n\n// passing to variables\nfloat targetX, targetY, targetZ\n{x} targetX, {y} targetY, {z} targetZ = SAMP_GET_STREAMED_OUT_PLAYER_COORDS {playerid} targetPlayer",
    "0B30": "///////////////////////////////Example 1///////////////////////////////\n// enter car as driver then inform samp about it.\nint targetCar, targetCarID\n// do something to targetCar\nif DOES_VEHICLE_EXIST {handle} targetCar\nthen\n    TASK_ENTER_CAR_AS_DRIVER {char} $scplayer {vehicle} targetCar {time} 10000\n\n    {id} targetCarID = SAMP_GET_CAR_ID {handle} targetCar\n    SAMP_SEND_ENTER_CAR {carid} targetCarID  {ispassenger} false\n\n    TASK_ENTER_CAR_AS_PASSENGER {char} [Char] {vehicle} [Car] {time} [int] {seat} [SeatId]\nend\n\n///////////////////////////////Example 2///////////////////////////////\n\n// enter car as passenger then inform samp about it.\nint targetCar, targetCarID\n// do something to targetCar\nif DOES_VEHICLE_EXIST {handle} targetCar\nthen\n    TASK_ENTER_CAR_AS_PASSENGER {char} $scplayer {vehicle} targetCar {time} 10000 {seat} 0 // first passenger seat, hijack if necessary\n\n    {id} targetCarID = SAMP_GET_CAR_ID {handle} targetCar\n    SAMP_SEND_ENTER_CAR {carid} targetCarID  {ispassenger} true\nend",
    "0B31": "// Makes our Character exit his current Car and then informs SAMP about it\nint myCar, myCarID\nif IS_CHAR_SITTING_IN_ANY_CAR {Char} $PLAYER_ACTOR\nthen\n    {car} myCar = STORE_CAR_CHAR_IS_IN_NO_SAVE {char} $PLAYER_ACTOR\n    TASK_LEAVE_ANY_CAR {handle} $PLAYER_ACTOR\n    {id} myCarID = SAMP_GET_CAR_ID {handle} myCar\n    SAMP_SEND_EXIT_CAR {carid} myCarID\nend",
    "0B32": "// tells the server that we will spawn without teleporting our character\nSAMP_SEND_SPAWN",
    "0B33": "{$USE CLEO}\n{$USE SAMPFUNCS}\nNOP\n\nREPEAT\n    wait 100\nuntil SAMP_IS_AVAILABLE\n\n// Peeling Car Troll Example\nwhile true\n    int myCar, myCarID\n    wait 1000\n    if IS_CHAR_SITTING_IN_ANY_CAR {char} $scplayer\n    then\n        myCar = STORE_CAR_CHAR_IS_IN_NO_SAVE {char} $scplayer\n        myCarID = SAMP_GET_CAR_ID {handle} myCar\n        SAMP_SEND_DAMAGE_CAR {carid} myCarID {bodyflags} 0x00000000 {doorflags} 0x00000000 {lightflags} 0x00 {wheelflags} 0x00 // tells the server that all components of our car are functional\n    end\n    wait 1000\n    if IS_CHAR_SITTING_IN_ANY_CAR {char} $scplayer\n    then\n        myCar = STORE_CAR_CHAR_IS_IN_NO_SAVE {char} $scplayer\n        myCarID = SAMP_GET_CAR_ID {handle} myCar\n        SAMP_SEND_DAMAGE_CAR {carid} myCarID {bodyflags} 0xFFFFFFFF {doorflags} 0xFFFFFFFF {lightflags} 0xFF {wheelflags} 0xFF // tells the server that all components of our car are damaged\n    end\nend",
    "0B34": "// Script Example\n// Our Local Character will die after typing /killme to SAMP chat\n\n{$USE CLEO}\n{$USE SAMPFUNCS}\nNOP\n\n// wait for SAMP to fully initialize\nREPEAT\n    wait 100\nUNTIL SAMP_IS_AVAILABLE\n\nSAMP_REGISTER_CLIENTSIDE_COMMAND {chatcommand} \"killme\" {callbacklabel} @ChatCallback_KillMe\n\n// We don't need an infinite loop for this example. So we pause the thread to lessen the workload for our processor\nPAUSE_THREAD {streamid} 0 // Pauses the main thread\n// This part of the main thread will not be reached unless the main thread is resumed\n\n:ChatCallback_KillMe\n    TASK_DIE {handle} $scplauer // kill our local character\n    SAMP_SEND_DEATH_BY_PLAYER {playerid} 0xFFFF {weaponid} WeaponType.UziDriveby // inform the server that I died by natural means(toxicated)\nSAMP_CMD_RET // end of callback",
    "0B35": "// Script Example\n// Type /receiveweapon <weapon id> <ammo> to receive a weapon with ammo\n// Our character will receive SPAZ Gun with 1324 bullets:\n// /receiveweapon 27 1324\n\n{$USE CLEO}\n{$USE SAMPFUNCS}\nNOP\n\n// wait for SAMP to fully initialize\nREPEAT\n    wait 100\nUNTIL SAMP_IS_AVAILABLE\n\nSAMP_REGISTER_CLIENTSIDE_COMMAND {chatcommand} \"receiveweapon\" {callbacklabel} @ChatCallback_ReceiveWeapon\n\n// We don't need an infinite loop for this example. So we pause the thread to lessen the workload for our processor\nPAUSE_THREAD {streamid} 0 // Pauses the main thread\n// This part of the main thread will not be reached unless the main thread is resumed\n\n:ChatCallback_ReceiveWeapon\n    int cmdParams, paramCountCheck, weaponID, ammo\n    if cmdParams = SAMP_GET_PARAMS_OF_LAST_TRIGGERED_COMMAND // check if user included parameters after the command keyword\n    then\n        if paramCountCheck, weaponID, ammo = SCAN_STRING {string} cmdParams {format} \"%hhu %u\"\n        then\n            if paramCountCheck == 2 // 2 parameters were parsed\n            then\n                if HAS_CHAR_GOT_WEAPON {char} $scplayer {weaponType} weaponID\n                then ADD_AMMO_TO_CHAR {char} $scplayer {weaponType} weaponID {ammo} ammo\n                else GIVE_WEAPON_TO_CHAR {char} $scplayer {weaponType} weaponID {ammo} ammo\n                end\n            end\n        end\n    end\nSAMP_CMD_RET // end of callback",
    "0B36": "int targetPlayer\n// do something to targetPlayer\nint {nickname} targetNick = SAMP_GET_PLAYER_NICKNAME {playerid} targetPlayer",
    "0B37": "int targetPlayer\n// do something to targetPlayer\nint targetColor = SAMP_GET_PLAYER_COLOR {playerid} targetPlayer",
    "0B38": "SAMP_CONNECT {stringserverip} \"127.0.0.1\" {port} 7777 // connect to our local server using its ip counterpart\n\nwait 10000\n\nSAMP_CONNECT {stringserverip} \"localhost\" {port} 7777 // connect to our local server using its domain name counterpart\n\nwait 10000\n\nSAMP_CONNECT {stringserverip} \"51.79.255.181\" {port} 7778 // connect to a certain remote server by ip\n\nwait 10000\n\nSAMP_CONNECT {stringserverip} \"samp.ugbase.eu\" {port} 7777 // connect to a certain remote server by domain name",
    "0B39": "// Example 1, how to correctly write the server IP to string variable 1@v\nconst\n    port = 0@\n    strBuf = 1@\nend\nstrBuf = GET_VAR_POINTER strBuf // get pointer to self\nstrBuf, port = SAMP_GET_SERVER_ADDRESS\n// server ip in string format has been written to strBuf. This string occupies 16 bytes to satisfy the string ip(uses 1@, 2@, 3@, 4@)\n\n// Example 2, write server IP to a temporarily allocated memory\nint strBuf, port\nstrBuf = ALLOCATE_MEMORY {size} 16\nstrBuf, port = SAMP_GET_SERVER_ADDRESS\n// server ip in string format has been written at the allocated memory region strBuf\n// do something to strBuf and port\nFREE_MEMORY {address} strBuf // free this temporary memory region to avoid memory leak",
    "0B3A": "int strBuf = ALLOCATE_MEMORY {size} 256\nSAMP_GET_SERVER_NAME strBuf\n// do something to {buffer} strBuf\nFREE_MEMORY strBuf",
    "0B3B": "SAMP_SHOW_DIALOG {id} 123 {title} \"Artificial SAMP Dialog\" {content} \"This is its content\" {leftOrMiddleButtonName} \"Cancel\" {rightButtonName} \"Submit\" {style} SampDialogStyle.Msgbox",
    "0B3C": "// Example 1: Simple Dialog Response Check\nif SAMP_HAS_DIALOG_RESPONDED {dialogid} 117 {buttonidstore} 0  {buttonidstore} 0 {inputtextwritetostringbuffer} 0\nthen // we have responded to dialog 117\nelse // we are still interacting with dialog 117, or dialog 117 still hasn't shown up.\nend\n\n\n// Example 2: Get Pressed Button ID, Selected Item ID, and the Input Text\nint whichButton, whichItem\nint inputtedText = ALLOCATE_MEMORY {size} 300\nif SAMP_HAS_DIALOG_RESPONDED {dialogid} 117 {buttonidstore} whichButton  {buttonidstore} whichItem {bufferinputtext} inputtedText\nthen // we have responded to dialog 117\n    do something to whichButton, whichItem, and inputtedText\nelse // we are still interacting with dialog 117, or dialog 117 still hasn't shown up.\nend\nFREE_MEMORY {address} inputtedText",
    "0B3D": "int myBitStream = SAMP_RAKNET_CREATE_BITSTREAM\n// do something to myBitStream\nSAMP_RAKNET_DELETE_BITSTREAM myBitStream // free from memory",
    "0B3E": "int myBitStream = SAMP_RAKNET_CREATE_BITSTREAM\n// do something to myBitStream\nSAMP_RAKNET_DELETE_BITSTREAM myBitStream // free from memory",
    "0B3F": "int myBitstream = SAMP_RAKNET_CREATE_BITSTREAM\nSAMP_RAKNET_BITSTREAM_WRITE myBitstream {value} 0x83FF3ABC {datatype} SampBitStreamDataType.Int {datasize} DataTypeSize.Int // example command that increases the Write Pointer by 4\nint testValue = SAMP_RAKNET_BITSTREAM_READ myBitstream {datatype} SampBitStreamDataType.Short {datasize} DataTypeSize.Short // example command that increases the Read Pointer by 2\n// expected: testValue = 0x3ABC\nint checkWriteOffset, checkReadOffset\ncheckWriteOffset = SAMP_RAKNET_BITSTREAM_GET_WRITE_OFFSET myBitstream\ncheckReadOffset = SAMP_RAKNET_BITSTREAM_GET_READ_OFFSET myBitstream\n// expected: checkWriteOffset = 4\n// expected: checkReadOffset = 2\n\nSAMP_RAKNET_RESET_BITSTREAM myBitstream\ncheckWriteOffset = SAMP_RAKNET_BITSTREAM_GET_WRITE_OFFSET myBitstream\ncheckReadOffset = SAMP_RAKNET_BITSTREAM_GET_READ_OFFSET myBitstream\n// expected: checkWriteOffset = 0\n// expected: checkReadOffset = 0",
    "0B40": "int myBitStream\n// do something to bitStream\nSAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xF73F {datatype} SampBitStreamDataType.Short {datasize} DataTypeSize.Short",
    "0B41": "if IS_CHAR_SITTING_IN_ANY_CAR $scplayer\nthen\n    int myCar = STORE_CAR_CHAR_IS_IN_NO_SAVE $scplayer\n    int myCarID = SAMP_GET_CAR_ID myCar\n        // Construct a Bitstream holding a SampRpc.DamageCar data\n    int myBitStream = SAMP_RAKNET_CREATE_BITSTREAM // create bitstream object with class Bitstream\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} myCarID {datatype} SampBitStreamDataType.Short {datasize} DataTypeSize.Short // CarID\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFFFFFFFF {datatype} SampBitStreamDataType.Int {datasize} DataTypeSize.Int // bodyflags\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFFFFFFFF {datatype} SampBitStreamDataType.Int {datasize} DataTypeSize.Int // doorflags\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFF {datatype} SampBitStreamDataType.Byte {datasize} DataTypeSize.Byte // lightflags\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFF {datatype} SampBitStreamDataType.Byte {datasize} DataTypeSize.Byte // wheelflags\n        //\n    // Bitstream is ready to be transmitted\n    SAMP_RAKNET_SEND_RPC_WITH_PARAMS {rpcid} SampRpc.DamageCar {bitstream} myBitStream {priorityid} SampPriority.Medium {reliabilityid} SampReliability.ReliableOrdered {orderingchannel} 0 {shifttimestamp} 0\nend",
    "0B42": "int myRCONCommand = ALLOCATE_MEMORY 58\nmyRCONCommand = STRING_FORMAT \"This_is_a_very_long_String_Example_we_will_send\"\nint textLength = SF_STRLEN myRCONCommand\n    // Construct a Bitstream holding a SampRpc.RconCommand data\nint myBitStream = SAMP_RAKNET_CREATE_BITSTREAM // create bitstream object with class Bitstream\nSAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} SampRpc.RconCommand {datatype} SampBitStreamDataType.Byte {datasize} DataTypeSize.Byte // PacketID\nSAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} textLength {datatype} SampBitStreamDataType.Int {datasize} DataTypeSize.Int // TextLength\nSAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} myRCONCommand {datatype} SampBitStreamDataType.Array {datasize} textLength // CMDText\n    //\n// Bitstream is ready to be transmitted\nSAMP_RAKNET_SEND_PACKET_WITH_PARAMS {bitstream} myBitStream {priorityid} SampPriority.Medium {reliabilityid} SampReliability.ReliableOrdered {orderingchannel} 0\nFREE_MEMORY myRCONCommand",
    "0B43": "// Script Example\n// Our Local Character will die after typing /killme to SAMP chat\n\n{$USE CLEO}\n{$USE SAMPFUNCS}\nNOP\n\n// wait for SAMP to fully initialize\nREPEAT\n    wait 100\nUNTIL SAMP_IS_AVAILABLE\n\nSAMP_REGISTER_CLIENTSIDE_COMMAND {chatcommand} \"killme\" {callbacklabel} @ChatCallback_KillMe\n\n// We don't need an infinite loop for this example. So we pause the thread to lessen the workload for our processor\nPAUSE_THREAD {streamid} 0 // Pauses the main thread\n// This part of the main thread will not be reached unless the main thread is resumed\n\n:ChatCallback_KillMe\n    TASK_DIE {handle} $scplauer // kill our local character\n    SAMP_SEND_DEATH_BY_PLAYER {playerid} 0xFFFF {weaponid} WeaponType.UziDriveby // inform the server that I died by natural means(toxicated)\nSAMP_CMD_RET // end of callback",
    "0B44": "// Example 1: attach a 3D text to our character or car\nint attachedID, my3DTextID\nif IS_CHAR_SITTING_IN_ANY_CAR $scplayer\nthen // attach a red 3d text at the top of my car\n    int myCar = STORE_CAR_CHAR_IS_IN_NO_SAVE $scplayer\n    int myCarModel = GET_CAR_MODEL myCar\n    float offsetZ, unused\n    unused, unused, unused, unused, unused, offsetZ = get_model_dimensions {modelId} myCarModel\n    offsetZ += 2.0 // elevate\n    attachedID = SAMP_GET_CAR_ID {handle} myCar\n    if my3DTextID = SAMP_CREATE_3D_TEXT {text} \"I'm InCar\" {color} 0xFFFF0000 {coordx} 0.0 {coordy} 0.0 {coordz} offsetZ {visibilityradius} 10.0 {showbehindwalls} true {attachedplayerid} -1 {attachedcarid} attachedID\n    then // my3DTextID has been created successfully\n        // do something to my3DTextID\n    end\nelse // attach a purple 3d text at my character's back\n    attachedID = SAMP_GET_PLAYER_ID {handle} $scplayer\n    if my3DTextID = SAMP_CREATE_3D_TEXT {text} \"I'm Onfoot\" {color} 0xFFFF00FF {coordx} 0.0 {coordy} -2.0 {coordz} 0.0 {visibilityradius} 10.0 {showbehindwalls} true {attachedplayerid} attachedID {attachedcarid} -1\n    then // my3DTextID has been created successfully\n        // do something to my3DTextID\n    end\nend\n\n\n// Example 2: Create a yellow 3D Text at specified world coordinate\nint my3DTextID\nif my3DTextID = SAMP_CREATE_3D_TEXT {text} \"Hello World!\" {color} 0xFFFFFF00 {coordx} 1324.14 {coordy} -2032.44 {coordz} 50.13 {visibilityradius} 50.0 {showbehindwalls} false {attachedplayerid} -1 {attachedcarid} -1\nthen // my3DTextID has been created successfully\n    // do something to my3DTextID\nend",
    "0B45": "int target3DTextID\n// do something to target3DTextID\nif SAMP_DELETE_3D_TEXT {3Dtextid} target3DTextID\nthen // target3DTextID is now gone\nelse // target3DTextID doesn't exist\nend",
    "0B46": "if SAMP_IS_3D_TEXT_EXIST {3Dtextid} 13 // checks if a 3dtext with id = 13 exists\nthen\n    // 3dtext 13 is streamed around somewhere\nelse\n    // 3dtext 13 is not streamed\nend",
    "0B47": "if SAMP_CLOSE_ACTIVE_DIALOG_WITH_BUTTON 0 // Press No Button\nthen // closed the dialog successfully\nelse // dialog is not opened\nend\n\nif SAMP_CLOSE_ACTIVE_DIALOG_WITH_BUTTON 1 // Press Yes Button\nthen // closed the dialog successfully\nelse // dialog is not opened\nend",
    "0B48": "int itemid\nif itemid = SAMP_GET_ACTIVE_DIALOG_SELECTED_LIST_ITEM\nthen // a dialog with list style is currently opened\n    // do something to itemid\nend",
    "0B49": "if SAMP_SELECT_ACTIVE_DIALOG_LIST_ITEM {itemid} 3\nthen\n    // element 3 has been selected\nelse\n    // dialog is either not opened, style is not list, or itemid is invalid\nend",
    "0B4A": "int strbuf = ALLOCATE_MEMORY {size} 300\nif strbuf = SAMP_GET_ACTIVE_DIALOG_EDITBOX_TEXT\nthen\n    // do something to strbuf\nelse\n    // dialog is not opened or is not an edit dialog\nend\nFREE_MEMORY {address} strbuf",
    "0B4B": "if SAMP_SET_ACTIVE_DIALOG_EDITBOX_TEXT \"Sample Text\"\nthen\n    // do something\nelse\n    // dialog is not opened or is not an edit dialog\nend",
    "0B4C": "if SAMP_IS_DIALOG_ACTIVE {dialogid} 183\nthen // dialog 183 is visible\nelse // dialog 183 is not visible\nend",
    "0B4D": "int dialogType\nif dialogType = SAMP_GET_DIALOG_STYLE\nthen // do something\nelse // no dialog has been opened since the beginning of the game\nend",
    "0B4E": "int dialogID\nif dialogID = SAMP_GET_DIALOG_ID\nthen // do something\nelse // no dialog has been opened since the beginning of the game\nend",
    "0B4F": "int connectionStatus = SAMP_GET_GAMESTATE\nswitch connectionStatus\n   case SampGameState.Disconnected\n     // do something when disconnected\n   case SampGameState.Connected\n     // do something when connected\n   case SampGameState.WaitConnect, SampGameState.AwaitJoin, SampGameState.Restarting\n     // do something when establishing connection\n   default\n     // do something when status is unrecognizable\nend",
    "0B50": "int myObject \nif myObject = SAMP_GET_OBJECT_BY_ID {id} 77\nthen // object 77 is streamed\n    // do something to myObject\nelse // object 77 is not streamed\nend",
    "0B51": "int targetPickup\nif targetPickup = SAMP_GET_PICKUP_BY_ID {id} 13\nthen // pickup 13 is streamed\n    // do something to targetPickup\nelse // pickup 13 is not streamed\nend",
    "0B52": "int targetObject, targetObjectID\n// do something to targetObject\nif targetObjectID = SAMP_GET_OBJECT_ID {handle} targetObject\nthen // targetObject is a SAMP Object\n    // do something to targetObjectID\nelse\n    // targetObject is a GTA Local Object(Artificially created at our Client)\nend",
    "0B53": "int targetPickup, targetPickupID\n// do something to targetPickup\nif targetPickupID = SAMP_GET_PICKUP_ID {handle} targetPickup\nthen // targetPickup is a SAMP Pickup\n    // do something to targetPickupID\nelse\n    // targetPickup is a GTA Local Pickup(Artificially created at our Client)\nend",
    "0B54": "int itemsCount\nif itemsCount = SAMP_GET_DIALOG_LIST_ITEMS_COUNT\nthen // do something\nelse\n    // no dialog has been opened since the beginning of the game\n    // or the detected dialog does not have a list attribute\nend",
    "0B55": "int targetActor\nif targetActor = GET_CHAR_PLAYER_IS_TARGETING $player1\nthen\n    // get target screen coordinates\n    float worldX, worldY, worldZ\n    worldX, worldY, worldZ = GET_CHAR_COORDINATES targetActor\n    int targetScreenX, targetScreenY = SF_WORLD_COORDS_TO_WINDOW_SCREEN_COORDS {worldcoordx} worldX {worldcoordy} worldY {worldcoordz} worldZ\n\n    // get my screen coordinates\n    worldX, worldY, worldZ = GET_CHAR_COORDINATES $scplayer\n    int myScreenX, myScreenY = SF_WORLD_COORDS_TO_WINDOW_SCREEN_COORDS {worldcoordx} worldX {worldcoordy} worldY {worldcoordz} worldZ\n\n    // draw a teal-colored line from me to target\n    SF_RENDER_DRAW_LINE {fromcoordx} myScreenX {fromcoordy} myScreenY {tocoordx} targetScreenX {tocoordy} targetScreenY {tickness} 2 {color} 0xFF00FFFF\nend",
    "0B56": "if IS_CHAR_ON_FOOT $scplayer\nthen\n    // sprint leftwards for 1 second\n    TIMERA = 0\n    repeat\n        SF_SET_BUTTON {buttonid} Button.LeftStickX {state} -128 // press run leftwards key\n        SF_SET_BUTTON {buttonid} Button.Cross {state} -128 // press Sprint key\n        wait 0\n    until TIMERA > 1000\n\n    // sprint rightwards for 1 second\n    TIMERA = 0\n    repeat\n        SF_SET_BUTTON {buttonid} Button.LeftStickX {state} 128 // press run rightwards key\n        SF_SET_BUTTON {buttonid} Button.Cross {state} -128 // press Sprint key\n        wait 0\n    until TIMERA > 1000\n\n    // fire weapon for 3 seconds\n    TIMERA = 0\n    repeat\n        SF_SET_BUTTON {buttonid} Button.Circle {state} 255 // press fire key\n        wait 0\n    until TIMERA > 3000\nend",
    "0B57": "int targetAnimID, targetPlayerID\n// do something to targetPlayerID\nif targetAnimID = SAMP_GET_PLAYER_ANIMATION {playerid} targetPlayerID\nthen\n    // do something to targetAnimID\nelse // targetPlayerID's character is not defined\nend",
    "0B58": "int myPlayerID = samp_get_player_id {handle} $scplayer\nint myAnimID = samp_get_player_animation {playerid} myPlayerID\nint strBufFileName = allocate_memory {size} 20\nint strBufAnimName = allocate_memory {size} 20\nstrBufFileName, strBufAnimName = SAMP_GET_ANIMATION_NAME {animid} myAnimID\n\n// do something to strBufFileName and strBufAnimName\n\nif strBufFileName, strBufAnimName = SAMP_GET_ANIMATION_NAME {animid} 8237 // <<<< test invalid id\nthen\n    // this will not be reached\nelse\n    // expected to reach here\nend\n\nFREE_MEMORY {address} strBufFileName\nFREE_MEMORY {address} strBufAnimName",
    "0B59": "int testedAnimID\n\nif testedAnimID = SAMP_GET_ANIMATION_ID {animname} \"ribbit\" {filename} \"frog\" // test invalid animation\nthen\n    // this will not be reached\nelse\n    // this will be reached\nend\n\nif testedAnimID = SAMP_GET_ANIMATION_ID {animname} \"BOMBER\" {filename} \"PED\" // test valid animation\nthen\n    // expected testedAnimID = 1006\n    // do something to testedAnimID\nelse\nend",
    "0B5A": "int screenwidth, screenheight = sf_get_screen_resolution\n// do something to screenwidth and screenheight",
    "0B5B": "int strBufItemText = ALLOCATE_MEMORY {size} 300\nif strBufItemText = SAMP_GET_DIALOG_LIST_ITEM_TEXT {itemid} 3\nthen // opened dialog has itemid 3\n    // do something to strBufItemText\nelse // dialog or itemid 3 not found\nend\nFREE_MEMORY strBufItemText",
    "0B5C": "int testedPlayer\n// do something to testedPlayer\nif SAMP_IS_PLAYER_PAUSED {playerid} testedPlayer\nthen // player is AFK\nelse // player is active\nend",
    "0B5D": "SAMP_SET_CURSOR_VISIBILITY true  // show the mouse cursor\nSAMP_SET_CURSOR_VISIBILITY false // hide the mouse cursor",
    "0B5E": "int coordX,coordY = SF_GET_CURSOR_COORD",
    "0B5F": "int myWindowScreenCoordX, myWindowScreenCoordY = SF_GET_SCREEN_RESOLUTION\nfloat myGameScreenCoordX, myGameScreenCoordY = SF_WINDOW_SCREEN_COORDS_TO_GAME_SCREEN_COORDS {windowscreencoordx} myWindowScreenCoordX {windowscreencoordy} myWindowScreenCoordY",
    "0B60": "int myWindowScreenCoordX, myWindowScreenCoordY = SF_GAME_SCREEN_COORDS_TO_WINDOW_SCREEN_COORDS {gamescreencoordx} 315.19 {gamescreencoordy} 98.89",
    "0B61": "if SAMP_IS_LOCAL_PLAYER_SPAWNED\nthen // our local player had spawned already\nelse // our local player hasn't spawned yet\nend",
    "0B62": "int mySpecialAction\nint myPlayerID = SAMP_GET_PLAYER_ID $scplayer\nif mySpecialAction = SAMP_GET_PLAYER_SPECIAL_ACTION myPlayerID\nthen\n    // do something to mySpecialAction\nelse // myPlayerID is not connected\nend",
    "0B63": "SAMP_UNREGISTER_CLIENTSIDED_COMMAND {chatcommand} \"greedisgood\"",
    "0B64": "if SAMP_IS_PLAYER_NPC {playerid} 17\nthen // player 17 is an NPC\nelse // player 17 is not an NPC\nend",
    "0B65": "int mySpecialAction\nint myPlayerID = SAMP_GET_PLAYER_ID $scplayer\nif myScore = SAMP_GET_PLAYER_SCORE myPlayerID\nthen\n    // do something to myScore\nelse // myPlayerID is not connected\nend",
    "0B66": "int a, r, g, b = SF_HEX_TO_ARGB {color} 0xFF00FF37\n// expected: a = 0xFF, r = 0x00, g = 0xFF, b = 0x37",
    "0B67": "int colorCode = SF_ARGB_TO_HEX {alpha} 0xFF {red} 0x5A {green} 0x14 {blue} 0xCA\n// expected: colorCode = 0xFF5A14CA",
    "0B68": "// draw a green line at the window screen\nSF_RENDER_DRAW_LINE {fromcoordx} 100 {fromcoordy} 150 {tocoordx} 720 {tocoordy} 300 {tickness} 1 {color} 0xFF00FF00",
    "0B69": "SF_RENDER_DRAW_BORDERLESS_BOX {coordx} 10 {coordy} 300 {width} 600 {height} 400 {color} 0xFFFF7F00 // create orange rectangle",
    "0B6A": "SF_RENDER_DRAW_BORDERED_BOX {coordx} 10 {coordy} 300 {width} 600 {height} 400 {color} 0xFFFF7F00 {bordersize} 10 {bordercolor} 0xFFFF00FF  // create orange rectangle with purple border",
    "0B6B": "int textFont = SF_RENDER_CREATE_FONT {fontname} \"Calibri\" {size} 9 {flags} 0x04\nint textWidth = SF_RENDER_GET_DRAW_WIDTH_OF_TEXT_WITH_FONT textFont {text} \"Hello World!\"\n// do something to textWidth",
    "0B6C": "int textFont = SF_RENDER_CREATE_FONT {fontname} \"Calibri\" {size} 9 {flags} 0x04\nint textHeight = SF_RENDER_GET_FONT_DRAW_HEIGHT textFont\n// do something to textHeight",
    "0B6D": "int textFont = SF_RENDER_CREATE_FONT {fontname} \"Calibri\" {size} 9 {flags} 0x04\n// do something to textFont",
    "0B6E": "int textFont = SF_RENDER_CREATE_FONT {fontname} \"Calibri\" {size} 9 {flags} 0x04\n// do something to textFont\nSF_RENDER_DELETE_FONT textFont // free renderfont object from memory",
    "0B6F": "int textFont = SF_RENDER_CREATE_FONT {fontname} \"Calibri\" {size} 9 {flags} 0x04\nSF_RENDER_DRAW_TEXT_WITH_FONT textFont {text} \"Hello World\" {coordx} 400 {coordy} 215 {color} 0xFFFF0000 // write a red colored \"Hello World\" at screen",
    "0B70": "SF_RENDER_DRAW_POLYGON {coordx} 500 {coordy} 308 {width} 300 {height} 218 {cornercount} 5 {heading} 60.0 {color} 0xFF00FF00 // draw a green pentagon",
    "0B71": "int myTexture = SF_RENDER_LOAD_TEXTURE_FROM_FILE {filepath} \"pic.png\"\n// do something to myTexture",
    "0B72": "int myTexture = SF_RENDER_LOAD_TEXTURE_FROM_FILE {filepath} \"pic.png\"\n// do something to myTexture\nSF_RENDER_RELEASE_TEXTURE myTexture // free from memory",
    "0B73": "int myTexture = SF_RENDER_LOAD_TEXTURE_FROM_FILE {filepath} \"pic.png\"\nSF_RENDER_DRAW_TEXTURE myTexture {coordx} 723 {coordy} 333 {width} 50 {height} 30 {heading} 180.0 {contrast} 0xFFFFFFFF // show 100px by 75px picture upside down\nSF_RENDER_RELEASE_TEXTURE myTexture",
    "0B74": "if SAMP_SET_CHAT_LINE_PARAMS {chatlineid} 0 {body} \"Hello World!\" {prefix} \"ajom\" {textcolor} 0xFFFFFF00 {prefixcolor} 0xFF00FFFF\nthen // latest chat message becomes \"{ffff00}ajom: {00ffff}Hello World!\"\n    // do something\nelse // chatlineid is invalid\nend",
    "0B75": "{$CLEO}\n{$USE SAMPFUNCS}\nNOP\n\nrepeat\n    wait 100\nuntil samp_is_available\n\nint testPfx = allocate_memory {size} 256\nint testBdy = allocate_memory {size} 256\n\nwhile true\n    int pfxColor, bdyColor\n    \n    wait {time} 3000\n    if {bodyBuffer} testBdy, {prefixBuffer} testPfx, {bodyColor} bdyColor , {prefixColor} pfxColor = samp_get_chat_line {index} 99 // get most recent message\n    then print_formatted_now {format} \"Body Color: %p , Message: %s~n~Prefix Color: %p , Message: %s\" {time} 100 {args} bdyColor testBdy pfxColor testPfx\n    else print_string_now {format} \"Test 1 Latest Chat Line is empty\" {time} 100\n    end\n    \n    wait {time} 3000\n    if {bodyColor} bdyColor , {prefixColor} pfxColor = samp_get_chat_line {index} 99 {bodyBuffer} 0 {prefixBuffer} 0 // get colors only\n    then print_formatted_now {format} \"Body Color: %p~n~Prefix Color: %p\" {time} 100 {args} pfxColor bdyColor\n    else print_string_now {format} \"Test 2 Latest Chat Line is empty\" {time} 100\n    end\n    \n    wait {time} 3000\n    if samp_get_chat_line {index} 99 {bodyBuffer} testBdy {prefixBuffer} testPfx {bodyColor} -1 {prefixColor} -1 // get strings only\n    then print_formatted_now {format} \"Body Message: %s~n~Prefix Message: %s\" {time} 100 {args} testBdy testPfx\n    else print_string_now {format} \"Test 3 Latest Chat Line is empty\" {time} 100\n    end\n    \n    wait {time} 3000\n    if samp_get_chat_line {index} 99 {bodyBuffer} testBdy {prefixBuffer} 0 {bodyColor} bdyColor {prefixColor} -1 // get body only\n    then print_formatted_now {format} \"Body Color: %p , Message: %s\" {time} 100 {args} bdyColor testBdy\n    else print_string_now {format} \"Test 4 Latest Chat Line is empty\" {time} 100\n    end\n    \n    wait {time} 3000\n    if samp_get_chat_line {index} 99 {bodyBuffer} 0 {prefixBuffer} testPfx {bodyColor} -1 {prefixColor} pfxColor // get prefix only\n    then print_formatted_now {format} \"Prefix Color: %p , Message: %s\" {time} 100 {args} pfxColor testPfx\n    else print_string_now {format} \"Test 5 Latest Chat Line is empty\" {time} 100\n    end\nend",
    "0B76": "SAMP_SET_CHAT_INPUT_TEXT \"This message can be found at the input chat box\"",
    "0B77": "int strBufText = ALLOCATE_MEMORY {size} 256\nif strBufText = SAMP_GET_CHAT_INPUT_TEXT\nthen \n// do something to strBufText\nelse \n// strBufText is unwritable\nend\nFREE_MEMORY {address} strBufText",
    "0B78": "SF_LOG_TO_CONSOLE {format} \"Logging My Script has been loaded\"\nSF_LOG_TO_CONSOLE {format} \"1 + 1 = %d\" {args} 2",
    "0B79": "SAMP_SET_CHAT_INPUT_VISIBILITY {isvisible} true  // visible\nSAMP_SET_CHAT_INPUT_VISIBILITY {isvisible} false // hidden",
    "0B7A": "int RCIPtr = SAMP_GET_RAKCLIENT_INTERFACE",
    "0B7B": "int RakPeekPtr = SAMP_GET_RAKPEER",
    "0B7C": "int ptr = SAMP_GET_RAKCLIENT_FUNC_BY_INDEX 0",
    "0B7D": "int ptr\nif ptr = SAMP_GET_RPC_FUNC_BY_INDEX {index} 0\nthen // do something\nelse // index is invalid\nend",
    "0B7E": "int ptr\nif ptr = SAMP_GET_RPC_NODE_BY_INDEX {index} 0\nthen // do something\nelse // index is invalid\nend",
    "0B7F": "int ptr = SAMP_GET_INFO_POINTER",
    "0B80": "int clientSidedDialog = sf_dxut_create_dialog {title} \"SF Dialog\"",
    "0B81": "int clientSidedDialog = sf_dxut_create_dialog {title} \"SF Dialog\"\n\n// somewhere in the code\nint eventID, controlID\nif eventID, controlID = sf_dxut_dialog_pop clientSidedDialog\nthen // do something to eventID, controlID\nelse // clientSidedDialog is invalid\nend",
    "0B82": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_BUTTON clientSidedDialog {id} 0 {text} \"Cancel\" {relcoordx} 25 {relcoordy} 200 {width} 50 {height} 10\nSF_DXUT_DIALOG_ADD_BUTTON clientSidedDialog {id} 1 {text} \"Submit\" {relcoordx} 85 {relcoordy} 200 {width} 50 {height} 10",
    "0B83": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 40 {text} \"God Mode\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 41 {text} \"No Collision\" {relcoordx} 10 {relcoordy} 140 {width} 50 {height} 10",
    "0B84": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_SET_COORDS_AND_DIMS clientSidedDialog  {coordx} 900 {coordy} 500 {width} 500 {height} 300",
    "0B85": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nint dialogCoordX, dialogCoordY, dialogWidth, dialogHeight = SF_DXUT_DIALOG_GET_COORDS_AND_DIMS clientSidedDialog",
    "0B86": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\n\nSF_DXUT_DIALOG_SET_VISIBILITY clientSidedDialog {isvisible} true // show dialog\n\nSF_DXUT_DIALOG_SET_VISIBILITY clientSidedDialog {isvisible} false // hide dialog",
    "0B87": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\n\nSF_DXUT_DIALOG_SET_VISIBILITY clientSidedDialog {isvisible} true // show dialog\nif SF_DXUT_DIALOG_IS_VISIBLE clientSidedDialog\nthen // expected\nelse // will not reach this section\nend\n\nSF_DXUT_DIALOG_SET_VISIBILITY clientSidedDialog {isvisible} false // hide dialog\nif SF_DXUT_DIALOG_IS_VISIBLE clientSidedDialog\nthen // will not reach this section\nelse // expected\nend",
    "0B88": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_EDITBOX clientSidedDialog {id} 60 {initialtext} \"Password\" {relcoordx} 10 {relcoordy} 200 {width} 100 {height} 10",
    "0B89": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 40 {text} \"God Mode\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\n\nint controlText\nif controlText = SF_DXUT_DIALOG_GET_TEXT_OF_CONTROL clientSidedDialog {id} 14\nthen // this section will not be be executed\nelse // clientSidedDialog has no control with ID = 14\nend\nif controlText = SF_DXUT_DIALOG_GET_TEXT_OF_CONTROL clientSidedDialog {id} 40\nthen // expected controlText = \"God Mode\"\nelse // this section will not be be executed\nend",
    "0B8A": "if IS_CHAR_SITTING_IN_ANY_CAR $scplayer\nthen\n    int myCar = STORE_CAR_CHAR_IS_IN_NO_SAVE $scplayer\n    int myCarID = SAMP_GET_CAR_ID myCar\n        // Construct a Bitstream holding a SampRpc.DamageCar data\n    int myBitStream = SAMP_RAKNET_CREATE_BITSTREAM // create bitstream object with class Bitstream\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} myCarID {datatype} SampBitStreamDataType.Short {datasize} DataTypeSize.Short // CarID\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFFFFFFFF {datatype} SampBitStreamDataType.Int {datasize} DataTypeSize.Int // bodyflags\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFFFFFFFF {datatype} SampBitStreamDataType.Int {datasize} DataTypeSize.Int // doorflags\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFF {datatype} SampBitStreamDataType.Byte {datasize} DataTypeSize.Byte // lightflags\n    SAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} 0xFF {datatype} SampBitStreamDataType.Byte {datasize} DataTypeSize.Byte // wheelflags\n        //\n    // Bitstream is ready to be transmitted\n    SAMP_RAKNET_SEND_RPC {rpcid} SampRpc.DamageCar {bitstream} myBitStream\nend",
    "0B8B": "int myRCONCommand = ALLOCATE_MEMORY 58\nmyRCONCommand = STRING_FORMAT \"This_is_a_very_long_String_Example_we_will_send\"\nint textLength = SF_STRLEN myRCONCommand\n    // Construct a Bitstream holding a SampRpc.RconCommand data\nint myBitStream = SAMP_RAKNET_CREATE_BITSTREAM // create bitstream object with class Bitstream\nSAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} SampRpc.RconCommand {datatype} SampBitStreamDataType.Byte {datasize} DataTypeSize.Byte // PacketID\nSAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} textLength {datatype} SampBitStreamDataType.Int {datasize} DataTypeSize.Int // TextLength\nSAMP_RAKNET_BITSTREAM_WRITE myBitStream {value} myRCONCommand {datatype} SampBitStreamDataType.Array {datasize} textLength // CMDText\n    //\n// Bitstream is ready to be transmitted\nsamp_raknet_send_packet {bitstream} myBitStream\nFREE_MEMORY myRCONCommand",
    "0B8C": "if SAMP_IS_CURSOR_ACTIVE\nthen // mouse cursor is shown\nelse // mouse cursor is hidden\nend",
    "0B8D": "SAMP_SET_CURSOR_MODE SampCursorMode.LockCamAndControl // Enables the Mouse Cursor",
    "0B8E": "int cursorMode = SAMP_GET_CURSOR_MODE",
    "0B8F": "float targetWorldCoordX, targetWorldCoordY, targetWorldCoordZ = SF_WINDOW_SCREEN_COORDS_TO_WORLD_COORDS {screencoordx} 750 {screencoordy} 500 {depth} 300.0",
    "0B90": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 40 {text} \"God Mode\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\nSF_DXUT_DIALOG_SET_VISIBILITY_OF_CONTROL clientSidedDialog {controlid} 40 {isvisible} false // hide control\nSF_DXUT_DIALOG_SET_VISIBILITY_OF_CONTROL clientSidedDialog {controlid} 40 {isvisible} true  // show control",
    "0B91": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_STATIC_TEXT clientSidedDialog {id} 40 {text} \"A Static Text Example\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10",
    "0B92": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 40 {text} \"God Mode\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 41 {text} \"No Collision\" {relcoordx} 10 {relcoordy} 140 {width} 50 {height} 10\n\n// somewhere in code\nif SF_DXUT_DIALOG_IS_CHECKBOX_CHECKED clientSidedDialog 40\nthen // checkbox control with id = 40 is checked\nelse // checkbox control with id = 40 is unchecked\nend",
    "0B93": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_SET_BACKGROUND_COLOR clientSidedDialog {color} 0xFF555555 // grey background",
    "0B94": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_STATIC_TEXT clientSidedDialog {id} 40 {text} \"A Static Text Example\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\n\n// test invalid control\nif SF_DXUT_DIALOG_SET_TEXT_OF_CONTROL clientSidedDialog {id} 9 {text} \"New Text\"\nthen // this section will not execute\nelse // clientSidedDialog has no control with id = 9\nend\n\n// test valid control\nif SF_DXUT_DIALOG_SET_TEXT_OF_CONTROL clientSidedDialog {id} 40 {text} \"New Text\"\nthen // The text written at the static text control is now \"New Text\"\nelse // this section will not execute\nend",
    "0B95": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 40 {text} \"God Mode\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\n\nSF_DXUT_DIALOG_SET_VISIBILITY_OF_CONTROL clientSidedDialog {controlid} 40 {isvisible} false // hide control\nif SF_DXUT_DIALOG_IS_CONTROL_VISIBLE clientSidedDialog {controlid} 40\nthen // this section will not be executed\nelse // do something\nend\n\nSF_DXUT_DIALOG_SET_VISIBILITY_OF_CONTROL clientSidedDialog {controlid} 40 {isvisible} true  // show control\nif SF_DXUT_DIALOG_IS_CONTROL_VISIBLE clientSidedDialog {controlid} 40\nthen // do something\nelse // this section will not be executed\nend",
    "0B96": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_SLIDER clientSidedDialog {id} 80 {relcoordx} 80 {relcoordy} 200 {width} 100 {height} 20 {maxvalue} 100",
    "0B97": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_SLIDER clientSidedDialog {id} 80 {relcoordx} 80 {relcoordy} 200 {width} 100 {height} 20 {maxvalue} 100\n\n// somewhere in the code\nint sliderVal = SF_DXUT_DIALOG_GET_SLIDER_VALUE clientSidedDialog {id} 80",
    "0B98": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_SLIDER clientSidedDialog {id} 80 {relcoordx} 80 {relcoordy} 200 {width} 100 {height} 20 {maxvalue} 100\nSF_DXUT_DIALOG_SET_SLIDER_VALUE clientSidedDialog {id} 80 {value} 50 // put the thumb at the center of the slider",
    "0B99": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400",
    "0B9A": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\nif SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Health\" {data} 1 {index} 0\nthen SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Armour\" {data} 2 {index} 1\nelse // failed to insert the element\nend",
    "0B9B": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\nif SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Health\" {data} 1 {index} 0\nthen SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Armour\" {data} 2 {index} 1\nelse // failed to insert the element\nend\n\n// somewhere in the code\nint selIndex, elCount = SF_DXUT_DIALOG_GET_SELECTED_LISTBOX_ELEMENT clientSidedDialog 100",
    "0B9C": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\nif SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Health\" {data} 1 {index} 0\nthen SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Armour\" {data} 2 {index} 1\nelse // failed to insert the element\nend\n\nif SF_DXUT_DIALOG_DELETE_LISTBOX_ELEMENT clientSidedDialog {id} 100 {index} 1\nthen // 1st element listbox with id = 100 has been removed\nelse // listbox element cannot be found\nend",
    "0B9D": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\nif SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Health\" {data} 1 {index} 0\nthen SF_DXUT_DIALOG_INSERT_LISTBOX_ELEMENT clientSidedDialog {id} 100 {text} \"Refill Armour\" {data} 2 {index} 1\nelse // failed to insert the element\nend\n\nint elText, elData\nif elText, elData = SF_DXUT_DIALOG_GET_LISTBOX_ELEMENT clientSidedDialog {id} 100 {index} 1\nthen // do something to elText, elData\nelse // listbox element cannot be found\nend",
    "0B9E": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 40 {text} \"God Mode\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 41 {text} \"No Collision\" {relcoordx} 10 {relcoordy} 140 {width} 50 {height} 10\nSAMP_DIALOG_SET_STATUS_OF_CHECKBOX clientSidedDialog {id} 41 {ischecked} true",
    "0B9F": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_SET_TITLE_VISIBILITY clientSidedDialog {isVisible} false // hide the dialog's title",
    "0BA0": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\n\nSF_DXUT_DIALOG_SET_TITLE_VISIBILITY clientSidedDialog {isVisible} false // hide the dialog's title\nif SF_DXUT_DIALOG_IS_TITLE_VISIBLE clientSidedDialog\nthen // this section will not execute\nelse // expected\nend\n\nSF_DXUT_DIALOG_SET_TITLE_VISIBILITY clientSidedDialog {isVisible} true // show the dialog's title\nif SF_DXUT_DIALOG_IS_TITLE_VISIBLE clientSidedDialog\nthen // expected\nelse // this section will not execute\nend",
    "0BA1": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_SET_MINIMIZED clientSidedDialog {isminimized} true // minimize the dialog",
    "0BA2": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\n\nSF_DXUT_DIALOG_SET_MINIMIZED clientSidedDialog {isminimized} false // minimize the dialog\nif SF_DXUT_DIALOG_IS_MINIMIZED clientSidedDialog\nthen // this section will not execute\nelse // expected\nend\n\nSF_DXUT_DIALOG_SET_MINIMIZED clientSidedDialog {isminimized} true // maximize the dialog\nif SF_DXUT_DIALOG_IS_MINIMIZED clientSidedDialog\nthen // expected\nelse // this section will not execute\nend",
    "0BA3": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\n\n\n// somewhere in the code\nSF_DXUT_DIALOG_DELETE_CONTROL clientSidedDialog {id} 100 // delete the listbox control",
    "0BA4": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\n\n// somewhere in the code\nSF_DXUT_DIALOG_DELETE clientSidedDialog",
    "0BA5": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_BUTTON clientSidedDialog {id} 0 {text} \"Cancel\" {relcoordx} 25 {relcoordy} 200 {width} 50 {height} 10\nSF_DXUT_DIALOG_ADD_BUTTON clientSidedDialog {id} 1 {text} \"Submit\" {relcoordx} 85 {relcoordy} 200 {width} 50 {height} 10\nSF_DXUT_DIALOG_SET_FOCUSED_CONTROL clientSidedDialog {id} 0 // pressing enter will simulate like the user pressed the cancel button",
    "0BA6": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\n\n// somewhere in the code\nSF_DXUT_DIALOG_SET_DIMS_OF_CONTROL clientSidedDialog {id} 100 {width} 150 {height} 700 // set new dimensions for the listbox",
    "0BA7": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\n\nint lbWith, lbHeight = SF_DXUT_DIALOG_GET_DIMS_OF_CONTROL clientSidedDialog {id} 100\n// expected lbWith = 150, lbHeight = 400",
    "0BA8": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\n\n// somewhere in the code\nSF_DXUT_DIALOG_SET_COORDS_OF_CONTROL clientSidedDialog {id} 100 {relcoordx} 20 {relcoordy} 150 // change the window position of our listbox",
    "0BA9": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_LISTBOX clientSidedDialog {id} 100 {relcoordx} 10 {relcoordy} 200 {width} 150 {height} 400\n\nint lbCoordX, lbCoordY = SF_DXUT_DIALOG_GET_COORDS_OF_CONTROL clientSidedDialog {id} 100\n// expected lbCoordX = 10, lbCoordY = 200",
    "0BAA": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 40 {text} \"God Mode\" {relcoordx} 10 {relcoordy} 80 {width} 50 {height} 10\nSF_DXUT_DIALOG_ADD_CHECKBOX clientSidedDialog {id} 41 {text} \"No Collision\" {relcoordx} 10 {relcoordy} 140 {width} 50 {height} 10\nSF_DXUT_DIALOG_SET_COLOR_OF_CHECKBOX clientSidedDialog {id} 40 {color} 0xFF00FF00 // Green\nSF_DXUT_DIALOG_SET_COLOR_OF_CHECKBOX clientSidedDialog {id} 41 {color} 0xFFFF00FF // Purple",
    "0BAB": "int clientSidedDialog = SF_DXUT_CREATE_DIALOG {title} \"SF Dialog\"\nif SF_DXUT_DIALOG_EXIST clientSidedDialog\nthen // expected\nelse // this section will not execute\nend\n\nSF_DXUT_DIALOG_DELETE clientSidedDialog\nif SF_DXUT_DIALOG_EXIST clientSidedDialog\nthen // this section will not execute\nelse // expected\nend",
    "0BAC": "int svSettPtr = SAMP_GET_SERVER_SETTINGS_POINTER",
    "0BAD": "int poolsPtr = SAMP_GET_POOLS_POINTER",
    "0BAE": "int chatinfoPtr = SAMP_GET_CHAT_INFO_POINTER",
    "0BAF": "int inputinfoPtr = SAMP_GET_CHAT_INPUT_INFO_POINTER",
    "0BB0": "int dialogInfoPtr = SAMP_GET_DIALOG_INFO_POINTER",
    "0BB1": "int killInfoPtr = SAMP_GET_KILL_INFO_POINTER",
    "0BB2": "int miscInfoPtr = SAMP_GET_MISC_INFO_POINTER",
    "0BB3": "int textDrawPoolPtr = SAMP_GET_TEXTDRAW_POOL_POINTER",
    "0BB4": "int objPoolPtr = SAMP_GET_OBJECT_POOL_POINTER",
    "0BB5": "int gzPoolPtr = SAMP_GET_GANGZONE_POOL_POINTER",
    "0BB6": "int text3DPoolPtr = SAMP_GET_TEXTLABEL_POOL_POINTER",
    "0BB7": "int playerPoolPtr = SAMP_GET_PLAYER_POOL_POINTER",
    "0BB8": "int carPoolPtr = SAMP_GET_CAR_POOL_POINTER",
    "0BB9": "int pickupPoolPtr = SAMP_GET_PICKUP_POOL_POINTER",
    "0BBA": "int onFootData = ALLOCATE_MEMORY {size} 68 // stOnFootData occupies 68 bytes in 0.3.7 R1\nif onFootData = SAMP_STORE_PLAYER_ONFOOT_DATA {id} 17\nthen // do something to onFootData\nelse // buffer or player id is invalid\nend\nFREE_MEMORY {address} onFootData",
    "0BBB": "int inCarData = ALLOCATE_MEMORY {size} 63 // stInCarData occupies 63 bytes in 0.3.7 R1\nif inCarData = SAMP_STORE_PLAYER_INCAR_DATA {id} 17\nthen // do something to inCarData\nelse // buffer or player id is invalid\nend\nFREE_MEMORY {address} inCarData",
    "0BBC": "int passengerData = ALLOCATE_MEMORY {size} 24 // stPassengerData occupies 24 bytes in 0.3.7 R1\nif passengerData  = SAMP_STORE_PLAYER_PASSENGER_DATA {id} 17\nthen // do something to passengerData \nelse // buffer or player id is invalid\nend\nFREE_MEMORY {address} passengerData",
    "0BBD": "int trailerData = ALLOCATE_MEMORY {size} 54 // stPassengerData occupies 54 bytes in 0.3.7 R1\nif trailerData = SAMP_STORE_PLAYER_TRAILER_DATA {id} 17\nthen // do something to trailerData\nelse // buffer or player id is invalid\nend\nFREE_MEMORY {address} trailerData",
    "0BBE": "int aimData = ALLOCATE_MEMORY {size} 31 // stAimData occupies 31 bytes in 0.3.7 R1\nif aimData = SAMP_STORE_PLAYER_AIM_DATA {id} 17\nthen // do something to aimData\nelse // buffer or player id is invalid\nend\nFREE_MEMORY {address} aimData",
    "0BBF": "SAMP_SEND_RCON_COMMAND {command} \"/login\"",
    "0BC0": "int onFootData = ALLOCATE_MEMORY {size} 68 // stOnFootData occupies 68 bytes in 0.3.7 R1\n// do something to fill the contents of onFootData\nSAMP_SEND_ONFOOT_DATA {stOnFootData} onFootData\nFREE_MEMORY {address} onFootData",
    "0BC1": "int inCarData = ALLOCATE_MEMORY {size} 63 // stInCarData occupies 63 bytes in 0.3.7 R1\n// do something to fill the contents of inCarData\nSAMP_SEND_INCAR_DATA {stInCarData} inCarData\nFREE_MEMORY {address} inCarData",
    "0BC2": "int passengerData = ALLOCATE_MEMORY {size} 24 // stPassengerData occupies 24 bytes in 0.3.7 R1\n// do something to fill the contents of passengerData\nSAMP_SEND_PASSENGER_DATA {stPassengerData} passengerData\nFREE_MEMORY {address} passengerData",
    "0BC3": "int aimData = ALLOCATE_MEMORY {size} 31 // stAimData occupies 31 bytes in 0.3.7 R1\n// do something to fill the contents of aimData\nSAMP_SEND_AIM_DATA {stAimData} aimData\nFREE_MEMORY {address} aimData",
    "0BC4": "int bulletData = ALLOCATE_MEMORY {size} 40 // stBulletData occupies 40 bytes in 0.3.7 R1\n// do something to fill the contents of bulletData\nSAMP_SEND_BULLET_DATA {stBulletData} bulletData\nFREE_MEMORY {address} bulletData",
    "0BC5": "int trailerData = ALLOCATE_MEMORY {size} 54 // stTrailerData occupies 54 bytes in 0.3.7 R1\n// do something to fill the contents of trailerData\nSAMP_SEND_TRAILER_DATA {stTrailerData} trailerData\nFREE_MEMORY {address} trailerData",
    "0BC6": "int unoccupiedCarData = ALLOCATE_MEMORY {size} 67 // stUnoccupiedData occupies 67 bytes in 0.3.7 R1\n// do something to fill the contents of unoccupiedCarData\nSAMP_SEND_UNOCCUPIEDCAR_DATA {stUnoccupiedData} unoccupiedCarData\nFREE_MEMORY {address} unoccupiedCarData",
    "0BC7": "int specData = ALLOCATE_MEMORY {size} 18 // stSpectatorData occupies 18 bytes in 0.3.7 R1\n// do something to fill the contents of specData\nSAMP_SEND_SPECTATOR_DATA {stSpectatorData} specData\nFREE_MEMORY {address} specData",
    "0BC8": "SAMP_SEND_CLICK_PLAYER {playerId} 17 {clickSourceId} 0 // tell the server I clicked player 17 at scoreboard",
    "0BC9": "SAMP_SEND_DIALOG_RESPONSE {dialogId} 71 {whichButton} SampDialogButton.LeftOrCenter {itemId} 3 {inputText} \"Refill Health\"",
    "0BCA": "SAMP_SEND_CLICK_TEXTDRAW {textDrawId} 89",
    "0BCB": "SAMP_SEND_GIVE_DAMAGE {playerId} 53 {damage} SampWeaponDamage.Sniper {weapon} WeaponType.Sniper {bodyPart} SampBodyPart.Head // Inform server that we headshotted by player 53 using a sniper rifle",
    "0BCC": "SAMP_SEND_TAKE_DAMAGE {playerId} 53 {damage} SampWeaponDamage.Sniper {weapon} WeaponType.Sniper {bodyPart} SampBodyPart.Head // Inform server that we have been headshotted by player 53",
    "0BD7": "int contentBuf = ALLOCATE_MEMORY {size} 500\nSAMP_GET_DIALOG_CONTENT {contentBuffer} contentBuf\n// do something to contentBuf\nFREE_MEMORY {address} contentBuf",
    "0BD8": "int titleBuf = ALLOCATE_MEMORY {size} 500\nSAMP_GET_DIALOG_TITLE {buffer} titleBuf\n// do something to titleBuf\nFREE_MEMORY {address} titleBuf",
    "0BD9": "SAMP_SET_ACTIVE_DIALOG_ENVIRONMENT {isClientSide} true",
    "0BDA": "if SAMP_IS_ACTIVE_DIALOG_CLIENTSIDE\nthen // opened dialog is client-sided\nelse // either no dialog is opened or the opened dialog is not client-sided\nend",
    "0C45": "// Example 1: attach a 3D text to our character or car\nint attachedID\nif IS_CHAR_SITTING_IN_ANY_CAR $scplayer\nthen // attach a red 3d text at the top of my car\n    int myCar = STORE_CAR_CHAR_IS_IN_NO_SAVE $scplayer\n    int myCarModel = GET_CAR_MODEL myCar\n    float offsetZ, unused\n    unused, unused, unused, unused, unused, offsetZ = get_model_dimensions {modelId} myCarModel\n    offsetZ += 2.0 // elevate\n    attachedID = SAMP_GET_CAR_ID {handle} myCar\n    SAMP_CREATE_3D_TEXT_WITH_ID {id} 19 {text} \"I'm InCar\" {color} 0xFFFF0000 {coordx} 0.0 {coordy} 0.0 {coordz} offsetZ {visibilityradius} 10.0 {showbehindwalls} true {attachedplayerid} -1 {attachedcarid} attachedID\n    // 3D Text with ID = 19 has been created successfully, overwriting the old 3D text\nelse // attach a purple 3d text at my character's back\n    attachedID = SAMP_GET_PLAYER_ID {handle} $scplayer\n    SAMP_CREATE_3D_TEXT_WITH_ID {id} 19 {text} \"I'm Onfoot\" {color} 0xFFFF00FF {coordx} 0.0 {coordy} -2.0 {coordz} 0.0 {visibilityradius} 10.0 {showbehindwalls} true {attachedplayerid} attachedID {attachedcarid} -1\n    // 3D Text with ID = 19 has been created successfully, overwriting the old 3D text\nend\n\n\n// Example 2: Create a yellow 3D Text at specified world coordinate\nSAMP_CREATE_3D_TEXT_WITH_ID {id} 19 {text} \"Hello World!\" {color} 0xFFFFFF00 {coordx} 1324.14 {coordy} -2032.44 {coordz} 50.13 {visibilityradius} 50.0 {showbehindwalls} false {attachedplayerid} -1 {attachedcarid} -1\n// 3D Text with ID = 19 has been created successfully, overwriting the old 3D text",
    "0C46": "int my3DTextID\nif my3DTextID = SAMP_CREATE_3D_TEXT {text} \"Hello World!\" {color} 0xFFFFFF00 {coordx} 1324.14 {coordy} -2032.44 {coordz} 50.13 {visibilityradius} 50.0 {showbehindwalls} false {attachedplayerid} -1 {attachedcarid} -1\nthen\n    int vText, vColor, vIsWallHack, vPlayerID, vCarID\n    float vCoordX, vCoordY, vCoordZ, vRadius\n    vText, vColor, vCoordX, vCoordY, vCoordZ, vRadius, vIsWallHack, vPlayerID, vCarID = SAMP_GET_3D_TEXT_PARAMS my3DTextID\nend",
    "0C47": "int my3DTextID\nif my3DTextID = SAMP_CREATE_3D_TEXT {text} \"Hello World!\" {color} 0xFFFFFF00 {coordx} 1324.14 {coordy} -2032.44 {coordz} 50.13 {visibilityradius} 50.0 {showbehindwalls} false {attachedplayerid} -1 {attachedcarid} -1\nthen\n    SAMP_SET_3D_TEXT my3DTextID {text} \"How Are you?\"\n    // text projected by my3DTextID is now \"How Are you?\" instead of \"Hello World!\"\nend",
    "0C8D": "sf_write_text_to_clipboard \"Press CTRL+V To see this Message\"",
    "0C8E": "int buf = ALLOCATE_MEMORY {size} 400\nsf_read_data_from_clipboard {buffer} buf {size} 400\n// do something to buf\nFREE_MEMORY {address} buf"
  },
  "Sphere": {
    "2880": "Sphere s = add_sphere 0 0 0 2.0\nset_sphere_color s 0 255 0"
  },
  "audio": {
    "2500": "while is_audio_stream_playing 0@\n    wait 0\nend",
    "2501": "set_audio_stream_speed 0@ {speed} 0.25\nfloat duration = get_audio_stream_duration 0@\nprint_formatted_now \"It will take %f seconds to play this sound\" {time} 5000 {args} duration",
    "2503": "set_audio_stream_speed 0@ speed 1.0",
    "2504": "set_audio_stream_volume_with_transition 0@ volume 0.0 time_ms 1000 // fade out",
    "2505": "set_audio_stream_speed_with_transition 0@ {speed} 0.0 {timeMs} 500 // tape slow down and pasue",
    "2506": "set_audio_stream_source_size 0@ radius 50.0 // music inside entire building"
  },
  "bitwise": {
    "0B10": "<%= output1 %> = 2 and 3 // 0b10 and 0b11 = 0b10 (2)",
    "0B11": "<%= output1 %> = 2 or 3 // 0b10 or 0b11 = 0b11 (3)",
    "0B12": "<%= output1 %>= 2 xor 3 // 0b10 xor 0b11 = 0b01 (1)",
    "0B13": "<%= output1 %> = ~5 // 5 is 0b101, inverting all bits makes it 0b11111111111111111111111111111010 (-6)",
    "0B14": "<%= output1 %> = 10 mod 3 // returns 1",
    "0B15": "<%= output1 %> = 16 shr 1 // 0b10000 >> 1 = 0b1000 (8)",
    "0B16": "<%= output1 %> = 16 shl 1 // // 0b10000 << 1 = 0b100000 (32)",
    "0B17": "<%= input1 %> &= <%= input2 %>",
    "0B18": "<%= input1 %> |= <%= input2 %>",
    "0B19": "<%= input1 %> ^= <%= input2 %>",
    "0B1A": "~<%= input1 %>",
    "0B1B": "<%= input1 %> %= <%= input2 %>",
    "0B1C": "<%= input1 %> >>= <%= input2 %>",
    "0B1D": "<%= input1 %> <<= <%= input2 %>",
    "0B1E": "debug_on\nint 0@, 1@, 2@, 3@\n0@ = -42\n1@ = allocate_memory size 4\n\n// byte\nwrite_memory address 1@ size 1 value 0@ vp false\n2@ = read_memory address 1@ size 1 vp false\n3@ = 2@\nsign_extend 3@ from_size 1\ntrace \"1 BYTE: original value: %d, read value: %d, extended sign: %d\" 0@ 2@ 3@\n\n// 2 bytes\nwrite_memory address 1@ size 2 value 0@ vp false\n2@ = read_memory address 1@ size 2 vp false\n3@ = 2@\nsign_extend 3@ from_size 2\ntrace \"2 BYTES: original value: %d, read value: %d, extended sign: %d\" 0@ 2@ 3@\n\n// 3 bytes\nwrite_memory address 1@ size 3 value 0@ vp false\n2@ = read_memory address 1@ size 3 vp false\n3@ = 2@\nsign_extend 3@ from_size 3\ntrace \"3 BYTES: original value: %d, read value: %d, extended sign: %d\" 0@ 2@ 3@\n\n// 4 bytes\nwrite_memory address 1@ size 4 value 0@ vp false\n2@ = read_memory address 1@ size 4 vp false\n3@ = 2@\nsign_extend 3@ from_size 4\ntrace \"4 BYTES: original value: %d, read value: %d, extended sign: %d\" 0@ 2@ 3@"
  },
  "debug": {
    "2100": "debug_on\nbreakpoint // pause game\nbreakpoint false // pause this script\nbreakpoint \"blocking\" // pause game with message\nbreakpoint false \"not blocking\" // pause script with message\nbreakpoint \"Time is: %d\" TIMERA // pause game with formatted message\nbreakpoint false \"Value is: ~g~%d\" 0@ // pause script with formatted message",
    "2101": "debug_on\n\ntrace \"Hello world!\"\n\nwait {time} 1000\ntrace \"Time: %d, ~g~Variable: %d\" TIMERA 0@",
    "2102": "log_to_file \".\\myLog.txt\" {timestamp} true {text} \"Line with timestamp prefix\"\nlog_to_file \".\\myLog.txt\" {timestamp} false {text} \"Now just the line. Timer value is: %d\" {args} TIMERA\n\nlog_to_file \"user:\\myUserLog.txt\" {timestamp} false {text} \"Log file in game saves location!\""
  },
  "default": {
    "0003": "// shakes camera for 5 seconds\nTIMERA = 0\nwhile TIMERA < 5000\n    wait 0\n    shake_cam 50\nend",
    "0004": "<%= input1 %> = <%= input2 %>",
    "0005": "<%= input1 %> = <%= input2 %>",
    "0006": "<%= input1 %> = <%= input2 %>",
    "0007": "<%= input1 %> = <%= input2 %>",
    "0008": "<%= input1 %> += <%= input2 %>",
    "0009": "<%= input1 %> += <%= input2 %>",
    "000A": "<%= input1 %> += <%= input2 %>",
    "000B": "<%= input1 %> += <%= input2 %>",
    "000C": "<%= input1 %> -= <%= input2 %>",
    "000D": "<%= input1 %> -= <%= input2 %>",
    "000E": "<%= input1 %> -= <%= input2 %>",
    "000F": "<%= input1 %> -= <%= input2 %>",
    "0010": "<%= input1 %> *= <%= input2 %>",
    "0011": "<%= input1 %> *= <%= input2 %>",
    "0012": "<%= input1 %> *= <%= input2 %>",
    "0013": "<%= input1 %> *= <%= input2 %>",
    "0014": "<%= input1 %> /= <%= input2 %>",
    "0015": "<%= input1 %> /= <%= input2 %>",
    "0016": "<%= input1 %> /= <%= input2 %>",
    "0017": "<%= input1 %> /= <%= input2 %>",
    "0018": "<%= input1 %> > <%= input2 %>",
    "0019": "<%= input1 %> > <%= input2 %>",
    "001A": "<%= input1 %> > <%= input2 %>",
    "001B": "<%= input1 %> > <%= input2 %>",
    "001C": "<%= input1 %> > <%= input2 %>",
    "001D": "<%= input1 %> > <%= input2 %>",
    "001E": "<%= input1 %> > <%= input2 %>",
    "001F": "<%= input1 %> > <%= input2 %>",
    "0020": "<%= input1 %> > <%= input2 %>",
    "0021": "<%= input1 %> > <%= input2 %>",
    "0022": "<%= input1 %> > <%= input2 %>",
    "0023": "<%= input1 %> > <%= input2 %>",
    "0024": "<%= input1 %> > <%= input2 %>",
    "0025": "<%= input1 %> > <%= input2 %>",
    "0026": "<%= input1 %> > <%= input2 %>",
    "0027": "<%= input1 %> > <%= input2 %>",
    "0028": "<%= input1 %> >= <%= input2 %>",
    "0029": "<%= input1 %> >= <%= input2 %>",
    "002A": "<%= input1 %> >= <%= input2 %>",
    "002B": "<%= input1 %> >= <%= input2 %>",
    "002C": "<%= input1 %> >= <%= input2 %>",
    "002D": "<%= input1 %> >= <%= input2 %>",
    "002E": "<%= input1 %> >= <%= input2 %>",
    "002F": "<%= input1 %> >= <%= input2 %>",
    "0030": "<%= input1 %> >= <%= input2 %>",
    "0031": "<%= input1 %> >= <%= input2 %>",
    "0032": "<%= input1 %> >= <%= input2 %>",
    "0033": "<%= input1 %> >= <%= input2 %>",
    "0034": "<%= input1 %> >= <%= input2 %>",
    "0035": "<%= input1 %> >= <%= input2 %>",
    "0036": "<%= input1 %> >= <%= input2 %>",
    "0037": "<%= input1 %> >= <%= input2 %>",
    "0038": "<%= input1 %> == <%= input2 %>",
    "0039": "<%= input1 %> == <%= input2 %>",
    "003A": "<%= input1 %> == <%= input2 %>",
    "003B": "<%= input1 %> == <%= input2 %>",
    "003C": "<%= input1 %> == <%= input2 %>",
    "0042": "<%= input1 %> == <%= input2 %>",
    "0043": "<%= input1 %> == <%= input2 %>",
    "0044": "<%= input1 %> == <%= input2 %>",
    "0045": "<%= input1 %> == <%= input2 %>",
    "0046": "<%= input1 %> == <%= input2 %>",
    "0058": "<%= input1 %> += <%= input2 %>",
    "0059": "<%= input1 %> += <%= input2 %>",
    "005A": "<%= input1 %> += <%= input2 %>",
    "005B": "<%= input1 %> += <%= input2 %>",
    "005C": "<%= input1 %> += <%= input2 %>",
    "005D": "<%= input1 %> += <%= input2 %>",
    "005E": "<%= input1 %> += <%= input2 %>",
    "005F": "<%= input1 %> += <%= input2 %>",
    "0060": "<%= input1 %> -= <%= input2 %>",
    "0061": "<%= input1 %> -= <%= input2 %>",
    "0062": "<%= input1 %> -= <%= input2 %>",
    "0063": "<%= input1 %> -= <%= input2 %>",
    "0064": "<%= input1 %> -= <%= input2 %>",
    "0065": "<%= input1 %> -= <%= input2 %>",
    "0066": "<%= input1 %> -= <%= input2 %>",
    "0067": "<%= input1 %> -= <%= input2 %>",
    "0068": "<%= input1 %> *= <%= input2 %>",
    "0069": "<%= input1 %> *= <%= input2 %>",
    "006A": "<%= input1 %> *= <%= input2 %>",
    "006B": "<%= input1 %> *= <%= input2 %>",
    "006C": "<%= input1 %> *= <%= input2 %>",
    "006D": "<%= input1 %> *= <%= input2 %>",
    "006E": "<%= input1 %> *= <%= input2 %>",
    "006F": "<%= input1 %> *= <%= input2 %>",
    "0070": "<%= input1 %> /= <%= input2 %>",
    "0071": "<%= input1 %> /= <%= input2 %>",
    "0072": "<%= input1 %> /= <%= input2 %>",
    "0073": "<%= input1 %> /= <%= input2 %>",
    "0074": "<%= input1 %> /= <%= input2 %>",
    "0075": "<%= input1 %> /= <%= input2 %>",
    "0076": "<%= input1 %> /= <%= input2 %>",
    "0077": "<%= input1 %> /= <%= input2 %>",
    "0084": "<%= input1 %> = <%= input2 %>",
    "0085": "<%= input1 %> = <%= input2 %>",
    "0086": "<%= input1 %> = <%= input2 %>",
    "0087": "<%= input1 %> = <%= input2 %>",
    "0088": "<%= input1 %> = <%= input2 %>",
    "0089": "<%= input1 %> = <%= input2 %>",
    "008A": "<%= input1 %> = <%= input2 %>",
    "008B": "<%= input1 %> = <%= input2 %>",
    "009A": "int skin = 40\nrequest_model skin\nload_all_models_now\n\nint woman = create_char {type} PedType.CivFemale {model} skin {xyz} 2479.0 -1660.0 13.0\n\nmark_model_as_no_longer_needed skin",
    "00A5": "while true\n    wait 0\n    get_area_visible store_to interiorId\n    if and\n        is_key_pressed Key_F10\n        interiorId == Outside\n    then\n        while is_key_pressed Key_F10\n            wait 0\n        end\n        request_model #HUSTLER\n        load_all_models_now\n        repeat \n            wait 0\n        until has_model_loaded #HUSTLER\n        get_active_camera_coordinates store_to x y z\n        get_closest_car_node_with_heading x y z store_to nodeX nodeY nodeZ heading\n        clear_area nodeX nodeY nodeZ 3.0 False\n        create_car #HUSTLER nodeX nodeY nodeZ store_to Car\n        set_car_heading Car heading\n        mark_car_as_no_longer_needed Car\n        mark_model_as_no_longer_needed #HUSTLER\n    end\nend",
    "00BA": "print_big {key} 'DEAD' {time} 5000 {style} TextStyle.Middle",
    "00C3": "debug_on\nbreakpoint \"testing debug_on opcode\"",
    "00C4": "debug_off\nbreakpoint \"testing debug_off opcode\" // will be ignored",
    "00DD": "if\n    is_char_in_model $scplayer {model} #AMBULAN\nthen\n    print_string_now {text} \"Player in ambulance\" {time} 3000\nend",
    "00E1": "while true\n    wait 0\n    \n    if\n        is_button_pressed {pad} PadId.Pad1 {buttonId} Button.DpadUp // usually \"G\"\n    then\n        print_string_now {text} \"Button is down.\" {time} 1\n    end\nend",
    "00E2": "int state = get_pad_state {pad} PadId.Pad1 {buttonId} Button.LeftStickX // -128 to 128\n\n// as multiplier\nfloat analog =# state\nanalog /= 128.0 // -1.0 to 1.0 range\n\nprint_formatted_now {format} \"state: %d, analog: %f\" {time} 5000 {args} state analog",
    "0107": "int modelId = 910\nrequest_model {modelId} modelId\nload_all_models_now\nint obj = create_object {modelId} modelId {pos} 2490.0 -1666.0 14.0\nmark_model_as_no_longer_needed {modelId} modelId",
    "0109": "const Player=0, Pad1 = 0, DpadUp = 8\nwhile True\n    wait 0\n    if \n        is_button_pressed Pad1 DpadUp // usually \"G\"\n    then\n        add_score Player money 1\n    end\nend",
    "0117": "if\n    is_player_dead $player1\nthen\n    ...\nend",
    "015F": "set_fixed_camera_position {pos} 2490.0 -1660.0 15.0 {upVecOffset} 0.0 0.0 -2.0 // 0,0,1 + 0,0,-2 = 0,0,-1\npoint_camera_at_char {char} $scplayer {mode} CameraMode.Fixed {switchStyle} SwitchType.JumpCut",
    "016A": "// fade to black\ndo_fade {time} 2000 {direction} Fade.Out\nset_player_control $player1 {state} false\n\n// wait for screen to be black\nwhile get_fading_status\n    wait 0\nend\n\n// do something in secret\nset_camera_in_front_of_player\n\n// reveal\nset_player_control $player1 {state} true\ndo_fade {time} 2000 {direction} Fade.In",
    "0175": "while true\n    wait 0\n    get_area_visible store_to interiorId\n    if and\n        is_key_pressed Key_F10\n        interiorId == Outside\n    then\n        while is_key_pressed Key_F10\n            wait 0\n        end\n        request_model #HUSTLER\n        load_all_models_now\n        repeat \n            wait 0\n        until has_model_loaded #HUSTLER\n        get_active_camera_coordinates store_to x y z\n        get_closest_car_node_with_heading x y z store_to nodeX nodeY nodeZ heading\n        clear_area nodeX nodeY nodeZ 3.0 False\n        create_car #HUSTLER nodeX nodeY nodeZ store_to Car\n        set_car_heading Car heading\n        mark_car_as_no_longer_needed Car\n        mark_model_as_no_longer_needed #HUSTLER\n    end\nend",
    "018C": "add_one_off_sound {pos} 0.0 0.0 0.0 {sound_id} ScriptSound.SoundRaceGo\n\n\n\n// sound browser\nint soundId = 1000\nint keyWasDown = false\nwhile true\n    wait 0\n    \n    print_formatted_now \"Sound id: %d~n~Press ~y~<~s~ and ~y~>~s~ to browse,~n~hold ~y~SHIFT~s~ to browse faster.~n~Press ~y~?~s~ to play again.\" {time} 0xFFFFFF {args} soundId\n    \n    // handle browse keys\n    if or\n        is_key_pressed {keyCode} KeyCode.OemComma // <\n        is_key_pressed {keyCode} KeyCode.OemPeriod // >\n    then\n        keyWasDown = true\n        \n        int step\n        if\n            is_key_pressed {keyCode} KeyCode.OemPeriod\n        then\n            step = 1\n        else\n            step = -1\n        end\n        if\n            is_key_pressed {keyCode} KeyCode.Shift\n        then\n            step *= 10\n        end\n        soundId += step\n        \n        // warp around if out of bounds\n        if\n            soundId < 1000\n        then\n            soundId = 1190\n        end\n        if\n            soundId > 1190\n        then\n            soundId = 1000\n        end\n        \n        // wait for key release or timeout\n        while true\n            if and\n                not is_key_pressed {keyCode} KeyCode.OemComma // <\n                not is_key_pressed {keyCode} KeyCode.OemPeriod // >\n            then\n                break // keys released\n            end\n            \n            if\n                TimerA > 30 // auto repeat time in miliseconds\n            then\n                TimerA = 0\n                break\n            end\n            \n            wait 0\n        end\n        \n        continue\n    end\n    \n    // handle play key\n    if \n        is_key_pressed {keyCode} KeyCode.Oem2 // ? key\n    then\n        keyWasDown = true\n        \n        wait 50\n        continue\n    end\n    \n    if\n        keyWasDown == true\n    then\n        float x, y, z\n        x, y, z = get_char_coordinates $scplayer\n        \n        add_one_off_sound {pos} x y z {soundId} soundId\n        \n        keyWasDown = false\n    end\n    \n    // keys are up\n    TimerA = -200 // extra delay before auto repeat activates\nend",
    "01B2": "int modelId = get_weapontype_model {weaponType} WeaponType.Pistol\nrequest_model {modelId} modelId\nload_all_models_now\ngive_weapon_to_char $scplayer {weaponType} WeaponType.Pistol {ammo} 30\nmark_model_as_no_longer_needed {modelId} modelId",
    "01B4": "set_player_control $player1 {state} false",
    "01C3": "while true\n    wait 0\n    get_area_visible store_to interiorId\n    if and\n        is_key_pressed Key_F10\n        interiorId == Outside\n    then\n        while is_key_pressed Key_F10\n            wait 0\n        end\n        request_model #HUSTLER\n        load_all_models_now\n        repeat \n            wait 0\n        until has_model_loaded #HUSTLER\n        get_active_camera_coordinates store_to x y z\n        get_closest_car_node_with_heading x y z store_to nodeX nodeY nodeZ heading\n        clear_area nodeX nodeY nodeZ 3.0 False\n        create_car #HUSTLER nodeX nodeY nodeZ store_to Car\n        set_car_heading Car heading\n        mark_car_as_no_longer_needed Car\n        mark_model_as_no_longer_needed #HUSTLER\n    end\nend",
    "01E4": "const player=0\nint carl, health\nget_player_char player store_to carl\nget_char_health carl store_to health\nprint_with_number 'NUMBER' health 2000 true",
    "01F5": "const player=0\nint carl = get_player_char player\nint health = get_char_health carl\nprint_with_number {key} 'NUMBER' {num} health {duration} 2000 {flag} true",
    "020A": "const LockoutPlayerOnly = 3\nfloat x,y,z, radius=10.0\nint Car\nwhile true\n    wait 100\n    get_active_camera_coordinates store_to x y z\n    if get_random_car_in_sphere_no_save_recursive x y z radius findNext True skipWrecked True store_to Car\n    then lock_car_doors Car lockStatus LockoutPlayerOnly\n    end\nend",
    "0226": "const player=0\nint carl, health\nget_player_char player store_to carl\nget_char_health carl store_to health\nprint_with_number 'NUMBER' health 2000 true",
    "023C": "load_special_character {slotId} 1 {modelName} 'SMOKE'\nload_all_models_now\nset_player_model $player1 {modelId} #SPECIAL01\nunload_special_character {slotId} 1",
    "0247": "while true\n    wait 0\n    get_area_visible store_to interiorId\n    if and\n        is_key_pressed Key_F10\n        interiorId == Outside\n    then\n        while is_key_pressed Key_F10\n            wait 0\n        end\n        request_model #HUSTLER\n        load_all_models_now\n        repeat \n            wait 0\n        until has_model_loaded #HUSTLER\n        get_active_camera_coordinates store_to x y z\n        get_closest_car_node_with_heading x y z store_to nodeX nodeY nodeZ heading\n        clear_area nodeX nodeY nodeZ 3.0 False\n        create_car #HUSTLER nodeX nodeY nodeZ store_to Car\n        set_car_heading Car heading\n        mark_car_as_no_longer_needed Car\n        mark_model_as_no_longer_needed #HUSTLER\n    end\nend",
    "0248": "request_model {modelId} #SWAT\n\nwhile not has_model_loaded {modelId} #SWAT\n    wait {time} 0 // single render frame\nend\n\nint guy = create_char {type} PedType.CivMale {modelId} #SWAT {xyz} 2500.0 -1660.0 -100.0\n\nmark_model_as_no_longer_needed {modelId} #SWAT",
    "0249": "while true\n    wait 0\n    get_area_visible store_to interiorId\n    if and\n        is_key_pressed Key_F10\n        interiorId == Outside\n    then\n        while is_key_pressed Key_F10\n            wait 0\n        end\n        request_model #HUSTLER\n        load_all_models_now\n        repeat \n            wait 0\n        until has_model_loaded #HUSTLER\n        get_active_camera_coordinates store_to x y z\n        get_closest_car_node_with_heading x y z store_to nodeX nodeY nodeZ heading\n        clear_area nodeX nodeY nodeZ 3.0 False\n        create_car #HUSTLER nodeX nodeY nodeZ store_to Car\n        set_car_heading Car heading\n        mark_car_as_no_longer_needed Car\n        mark_model_as_no_longer_needed #HUSTLER\n    end\nend",
    "0256": "if\n    is_player_playing $player1\nthen\n    print_string_now {text} \"Not wasted or busted\" {time} 1000\nend",
    "029B": "int modelId = 910\nrequest_model {modelId} modelId\nload_all_models_now\nint obj = create_object_no_offset {modelId} modelId {pos} 2490.0 -1666.0 14.0\nmark_model_as_no_longer_needed {modelId} modelId",
    "0321": "float x,y,z, radius=15.0\nint Char\nwhile true\n    wait 2000\n    get_active_camera_coordinates store_to x y z\n    if get_random_char_in_sphere_no_save_recursive x y z radius findNext True skipDead True store_to handle Char\n    then explode_char_head Char\n    end\nend",
    "035F": "add_armour_to_char $scplayer {amount} 50",
    "038B": "request_model {modelId} #SWAT\n\nload_all_models_now\n\nint guy = create_char {type} PedType.CivMale {modelId} #SWAT {xyz} 2500.0 -1660.0 -100.0\n\nmark_model_as_no_longer_needed {modelId} #SWAT",
    "0395": "while true\n    wait 0\n    get_area_visible store_to interiorId\n    if and\n        is_key_pressed Key_F10\n        interiorId == Outside\n    then\n        while is_key_pressed Key_F10\n            wait 0\n        end\n        request_model #HUSTLER\n        load_all_models_now\n        repeat \n            wait 0\n        until has_model_loaded #HUSTLER\n        get_active_camera_coordinates store_to x y z\n        get_closest_car_node_with_heading x y z store_to nodeX nodeY nodeZ heading\n        clear_area nodeX nodeY nodeZ 3.0 False\n        create_car #HUSTLER nodeX nodeY nodeZ store_to Car\n        set_car_heading Car heading\n        mark_car_as_no_longer_needed Car\n        mark_model_as_no_longer_needed #HUSTLER\n    end\nend",
    "03A1": "while true\n    wait 0\n\n    float x, y, z\n    x, y, z = get_char_coordinates $scplayer\n\n    draw_sphere {pos} x y z {diameter} 1.0\nend",
    "03C0": "Car myCar = store_car_char_is_in_no_save $scplayer",
    "03C4": "const screenCounter = $sw4_health_display // global variable safe to use, unless \"Ghetto Drive By\" mission is in progress\n\nset_onscreen_counter_flash_when_first_displayed {var_counter} screenCounter {state} true\n\ndisplay_onscreen_counter_with_string {var_counter} screenCounter {display} CounterDisplay.Bar {text} 'DEAD' // WASTED\nscreenCounter = 10 // start with 10%\n\n// animate the bar\nwhile screenCounter < 100\n    screenCounter += 1\n    wait 100 \nend\n\n// display for one more second\nwait 1000\n\n// cleanup\nclear_onscreen_counter {var_counter} screenCounter",
    "03CF": "load_mission_audio {slotId} 1 {audioId} 20600\nwhile not has_mission_audio_loaded {slotId} 1\n    wait 0\nend\n\nplay_mission_audio {slot_id} 1\nwait 2000\n\nclear_mission_audio {slotId} 1",
    "03D3": "while true\n    wait 0\n\n    int interiorId = get_area_visible \n    if and\n        is_key_pressed {keyCode} KeyCode.F8\n        interiorId == 0 // outside\n    then\n        // wait for key release\n        while is_key_pressed {keyCode} KeyCode.F8\n            wait 0\n        end\n        \n        float pos[3]\n        pos[0], pos[1], pos[2] = get_offset_from_char_in_world_coords $scplayer {offset} 0.0 5.0 0.0\n\n        \n        float dir\n        pos[0], pos[1], pos[2], dir = get_closest_car_node_with_heading {pos} pos[0], pos[1], pos[2] // find road\n        \n        clear_area {pos} pos[0] pos[1] pos[2] {radius} 3.0 {clearParticles} false\n        \n        request_model #HUSTLER\n        load_all_models_now\n        int carHandle = create_car {modelId} #HUSTLER {pos} pos[0] pos[1] pos[2]\n        set_car_heading carHandle {heading} dir\n        mark_car_as_no_longer_needed carHandle // will despawn on its own\n    end\nend",
    "03D9": "if\n    not has_save_game_finished\nthen\n    debug_on\n    trace \"Save menu opening\"\nend",
    "0432": "int passenger = get_char_in_car_passenger_seat carHandle {seat} SeatId.FrontRight\nif\n    passenger <> -1\nthen\n    ...\nend",
    "0449": "while true\n    wait 0\n\n    if\n        is_char_sitting_in_any_car $scplayer\n    then\n        print_formatted_now {format} \"Player in vehicle!\" {time} 100\n    end\nend",
    "04A3": "<%= input1 %> == <%= input2 %>",
    "04A4": "<%= input1 %> == <%= input2 %>",
    "04AE": "<%= input1 %> = <%= input2 %>",
    "04AF": "<%= input1 %> = <%= input2 %>",
    "04B0": "<%= input1 %> > <%= input2 %>",
    "04B1": "<%= input1 %> > <%= input2 %>",
    "04B2": "<%= input1 %> > <%= input2 %>",
    "04B3": "<%= input1 %> > <%= input2 %>",
    "04B4": "<%= input1 %> >= <%= input2 %>",
    "04B5": "<%= input1 %> >= <%= input2 %>",
    "04B6": "<%= input1 %> >= <%= input2 %>",
    "04B7": "<%= input1 %> >= <%= input2 %>",
    "05A9": "<%= input1 %> = <%= input2 %>",
    "05AA": "<%= input1 %> = <%= input2 %>",
    "05AD": "<%= input1 %> == <%= input2 %>",
    "05AE": "<%= input1 %> = <%= input2 %>",
    "0605": "request_animation \"SUNBATHE\" // not needed for \"PED\"!\nload_all_models_now\n        \ntask_play_anim {handle} $scplayer {animationName} \"ParkSit_W_idleA\" {animationFile} \"SUNBATHE\" {blendSpeed} 0.5 {loop} true {lockX} false {lockY} false {keepLastFrame} false {time} 10000\n        \nremove_animation {animationFile} \"SUNBATHE\" // not allowed for \"PED\"!",
    "062A": "set_float_stat {id} StatId.Fat {value} 1000.0",
    "068D": "float x,y,z, radius=15.0\nint Char\nwhile true\n    wait 2000\n    get_active_camera_coordinates store_to x y z\n    if get_random_char_in_sphere_no_save_recursive x y z radius findNext True skipDead True store_to handle Char\n    then explode_char_head Char\n    end\nend",
    "06D1": "<%= input1 %> = <%= input2 %>",
    "06D2": "<%= input1 %> = <%= input2 %>",
    "06D8": "if\n    test_cheat \"train\"\nthen\n    float pos[3]\n    pos[0], pos[1], pos[2] = get_char_coordinates $scplayer\n    \n    warp_char_from_car_to_coord $scplayer {pos} pos[0] pos[1] pos[2] // remove player from car if in any\n    delete_mission_trains\n\n    request_model #TRAM\n    request_model #FREIGHT // freight train locomotive\n    request_model #STREAK // passenger train locomotive\n    request_model #FREIFLAT // freight flat railroad car\n    request_model #FREIBOX // freight box railroad car\n    request_model #STREAKC // passenger railroad car\n    load_all_models_now // force load now\n    \n    int trainType = generate_random_int_in_range {min} 0 {max} 16\n    \n    int trainHandle = create_mission_train {type} trainType {pos} pos[0] pos[1] pos[2] {direction} true\n                    \n    mark_model_as_no_longer_needed #TRAM\n    mark_model_as_no_longer_needed #FREIGHT\n    mark_model_as_no_longer_needed #STREAK\n    mark_model_as_no_longer_needed #FREIFLAT\n    mark_model_as_no_longer_needed #FREIBOX\n    mark_model_as_no_longer_needed #STREAKC\n    \n    warp_char_into_car $scplayer {vehicle} trainHandle\n    point_camera_at_car {vehicle} trainHandle {mode} CameraMode.CamOnAString {switchStyle} SwitchType.JumpCut\n    restore_camera\n    print_help_formatted {text} \"Train type: %d\" {args} trainType\nend",
    "077E": "while true\n    wait 0\n    get_area_visible store_to interiorId\n    if and\n        is_key_pressed Key_F10\n        interiorId == Outside\n    then\n        while is_key_pressed Key_F10\n            wait 0\n        end\n        request_model #HUSTLER\n        load_all_models_now\n        repeat \n            wait 0\n        until has_model_loaded #HUSTLER\n        get_active_camera_coordinates store_to x y z\n        get_closest_car_node_with_heading x y z store_to nodeX nodeY nodeZ heading\n        clear_area nodeX nodeY nodeZ 3.0 False\n        create_car #HUSTLER nodeX nodeY nodeZ store_to Car\n        set_car_heading Car heading\n        mark_car_as_no_longer_needed Car\n        mark_model_as_no_longer_needed #HUSTLER\n    end\nend",
    "0804": "set_char_coordinates $scplayer {pos} 2503.3533 -1686.2238 12.5\n\nrequest_animation \"CRIB\" // not needed for \"PED\"!\nload_all_models_now\n\ntask_char_slide_to_coord_and_play_anim {handle} $scplayer {pos} 2515.0 -1689.0 13.6 {heading} 50.0 {radius} 0.5 {animationName} \"PED_Console_Loop\" {animationFile} \"CRIB\" {blendSpeed} 1.0 {loop} true {lockX} false {lockY} false {keepLastFrame} false {time} 8000\n\nremove_animation {animationFile} \"CRIB\" // not allowed for \"PED\"!",
    "0806": "int prevKillCount = get_total_number_of_peds_killed_by_player $player1\nwhile true\n    wait 250\n    \n    int killCount = get_total_number_of_peds_killed_by_player $player1\n    killCount -= prevKillCount\n    \n    if\n        killCount > 0\n    then\n        print_formatted_now {format} \"Another %d bites the dust!\" {time} 3000 {args} killCount\n        add_one_off_sound {pos} 0.0 0.0 0.0 {soundId} ScriptSound.SoundCheckpointRed\n\n        prevKillCount += killCount\n    end\nend",
    "0812": "request_animation \"SWAT\" // not needed for \"PED\"!\nload_all_models_now\n\ntask_play_anim_non_interruptable {handle} $scplayer {animationName} \"swt_lkt\" {animationFile} \"SWAT\" {blendSpeed} 3.0 {loop} true {lockX} true {lockY} true {keepLastFrame} false {time} 60000\n\nremove_animation {animationFile} \"SWAT\" // not allowed for \"PED\"!\n\nalter_wanted_level $player1 {wantedLevel} 5 // interruptions",
    "0829": "request_animation \"BASEBALL\" // not needed for \"PED\"!\nload_all_models_now\n\ntask_die_named_anim {handle} $scplayer {animationName} \"Bat_Hit_3\" {animationFile} \"BASEBALL\" {blendSpeed} 3.0 {time} -1\n\nremove_animation {animationFile} \"BASEBALL\" // not allowed for \"PED\"!",
    "083F": "debug_on // enable trace command\nwhile true\n    wait 0\n    \n    int carHandle = get_car_char_is_using $scplayer\n    if\n        carHandle <> -1\n    then\n        float up = get_car_upright_value carHandle\n        trace \"Up: %0.2f\" up\n    end    \nend",
    "0871": "0871: switch_start $model_id num_cases 3 has_default_case true @default_label #NRG500 @case_nrg #FCR900 @case_fcr #BF400 @case_bf400 -1 @end_switch -1 @end_switch -1 @end_switch -1 @end_switch\n0871: switch_start $girlfriend num_cases 4 has_default_case false @end_switch 1 @case_michelle 2 @case_helena 3 @case_barbara 4 @case_katie -1 @end_switch -1 @end_switch -1 @end_switch",
    "0872": "0872: switch_continued #PETRO @IMPEXPM_12617 #FCR900 @IMPEXPM_12743 #NRG500 @IMPEXPM_12512 #FELTZER @IMPEXPM_12449 #REMINGTN @IMPEXPM_12470 #SLAMVAN @IMPEXPM_12659 #BLADE @IMPEXPM_12932 #VORTEX @IMPEXPM_13058 #BULLET @IMPEXPM_13079 \n0872: switch_continued #WINDSOR @IMPEXPM_12533 #JESTER @IMPEXPM_12260 #BANDITO @IMPEXPM_12785 #DUNERIDE @IMPEXPM_13037 #HUNTLEY @IMPEXPM_12890 #STAFFORD @IMPEXPM_12701 #EUROS @IMPEXPM_12764 #CLUB @IMPEXPM_12239 -1 @IMPEXPM_13121",
    "087B": "set_current_directory {path} 0 // restore default, prevents crash if changed by other scripts (prior to CLEO5)\ngive_player_clothes_outside_shop 0 {textureName} \"tash\" {modelName} \"cornrows\" {bodyPart} BodyPart.Head\nbuild_player_model 0\nset_player_model 0 {modelId} 0",
    "08D4": "add_text_label {dynamicKey} 'MENUTIT' {text} \"Title\"\nadd_text_label {dynamicKey} 'MENU01' {text} \"Option 1\"\nadd_text_label {dynamicKey} 'MENU02' {text} \"Option 2\"\nadd_text_label {dynamicKey} 'MENU03' {text} \"Option 3\"\n\nint menuHandle = create_menu {header} 'MENUTIT' {xy} 32.0 150.0 {width} 180.0 {numColumns} 1 {interactive} true {background} true {alignment} Align.Center\nset_menu_column menuHandle {column} 0 {title} 'DUMMY' {rows} 'MENU01' 'MENU02' 'MENU03' 'DUMMY' 'DUMMY' 'DUMMY' 'DUMMY' 'DUMMY' 'DUMMY' 'DUMMY' 'DUMMY' 'DUMMY'\n\n// wait for user choice\nint choice\nrepeat\n    wait {time} 0\n    choice = get_menu_item_accepted menuHandle\nuntil choice >= 0\n\ndelete_menu menuHandle\n\nprint_help_formatted {text} \"Selected index: %d\" {args} choice",
    "092E": "while true\n    wait 0\n    \n    float x, y, z\n    x, y, z = get_active_camera_coordinates\n\n    float waterHeight = get_water_height_at_coords {pos} x y {waves} true\n\n    print_formatted_now {format} \"Water: %0.2fm\" {time} 100 {args} waterHeight\nend",
    "0975": "const modelId = #FIRELA\nrequest_model modelId\nload_all_models_now\nCar c = create_car modelId 0 0 0\nmark_model_as_no_longer_needed modelId\nif is_emergency_services_vehicle c\nthen\n    print_formatted \"Car %d is an emergency vehicle\" 5000 modelId\nelse\n    print_formatted \"Car %d is not an emergency vehicle\" 5000 modelId\nend",
    "098B": "<%= output1 %> = <%= input1 %> + <%= input2 %>",
    "098C": "<%= output1 %> = <%= input1 %> + <%= input2 %>",
    "09C0": "const player=0, posOffset=120.0, negOffset=-120.0, NumLock = 144\nint Char, Car, Blip\nfloat x,y,z,x2,y2,z2\n\nget_player_char Player store_to Char   \nwhile true\n    wait 0\n    if \n        is_key_just_pressed NumLock\n    then  \n        get_offset_from_char_in_world_coords Char posOffset posOffset posOffset store_to x y z\n        get_offset_from_char_in_world_coords Char negOffset negOffset negOffset store_to x2 y2 z2    \n        get_random_car_of_type_in_angled_area_no_save x2 y2 x y 20.0 #TAXI store_to Car\n        if Car <> -1           \n        then add_blip_for_car Car store_to Blip\n        end\n    end\nend",
    "09C7": "request_model {modelId} 100\nload_all_models_now\nset_player_model $player1 {modelId} 100\nmark_model_as_no_longer_needed {modelId} 100",
    "09E7": "while true\n    wait {time} 0\n    if\n        is_player_control_on $player1\n    then\n        print_string_now {text} \"player can move\" {time} 1\n    end\nend",
    "0A08": "int width = get_string_width_with_number 'BJ_0' number 42  // ~1~",
    "0A1A": "request_animation \"GANGS\" // not needed for \"PED\"!\nload_all_models_now\n\ntask_play_anim_secondary {handle} $scplayer {animationName} \"PRTIAL_GNGTLKE\" {animationFile} \"GANGS\" {blendSpeed} 0.2 {loop} true {lockX} false {lockY} false {keepLastFrame} false {time} -1\n\nremove_animation {animationFile} \"GANGS\" // not allowed for \"PED\""
  },
  "file": {
    "0B02": "move_file <%= input1 %> {to} <%= input2 %>",
    "0B03": "move_directory <%= input1 %> {to} <%= input2 %>",
    "0B04": "copy_file <%= input1 %> {to} <%= input2 %>",
    "0B05": "copy_directory <%= input1 %> {to} <%= input2 %>",
    "2301": "int f = open_file \"root:\\stream.ini\" \"rb\" // file must be open in binary mode\nint size = get_file_size f\nint buf = allocate_memory size\n\nread_block_from_file f size buf // read file to allocated buffer\n\ntrace buf\n\nfree_memory buf",
    "2302": "\nint f = open_file \"root:\\dump.txt\" \"wb\" // create file in game root folder\n\nint buf_start = get_label_pointer @buf_start\nint buf_end = get_label_pointer @buf_end\nint size = buf_end - buf_start\n\nwrite_block_to_file f size buf_start // write content of hex block to file\nclose_file f\n\n\n\n\n:buf_start\nhex\n    \"hello world\" 00\nend\n:buf_end\n",
    "2303": "debug_on // enable trace command\nint buf = allocate_memory size 260 \n\nbuf = resolve_filepath \"root:\" // game root directory\ntrace \"Game installed in %s\" 0@\n\nbuf = resolve_filepath \"root:\\data\\ped.dat\" // get path to ped.dat\ntrace buf\n\nbuf = resolve_filepath \"user:\" // game saves location\ntrace \"User data location:~w~ %s\" buf\n\nbuf = resolve_filepath \".\" // this script's source file directory (not affected by 0A99)\ntrace \"This script dir:~w~ %s\" buf\n\nbuf = resolve_filepath \"cleo:\" // virtual path: CLEO directory\ntrace \"CLEO dir:~w~ %s\" buf\n\nbuf = resolve_filepath \"modules:\" // virtual path: CLEO modules directory\ntrace \"CLEO modules dir:~w~ %s\" buf\n\nbuf = resolve_filepath \"\" // relative path\ntrace \"Script's working directory is:~w~ %s\" buf\n\nbuf = resolve_filepath \"file.txt\" // relative path \ntrace buf\n\nset_current_directory 1 // user data\n\nbuf = resolve_filepath \"\" // relative path\ntrace \"Script's changed working directory is:~w~ %s\" buf\n\nbuf = resolve_filepath \"file.txt\" // path relative to location set with 0A99\ntrace buf\n\nfree_memory buf",
    "2304": "debug_on // enable trace command\n\nLongString name = get_script_filename {address} -1 {fullPath} false\ntrace \"This script file:~w~ %s\" name\n \nint script = get_script_struct_named {scriptName} \"main\"\nint str = allocate_memory {size} 260\nstr = get_script_filename {address} script {fullPath} true\ntrace \"Other script:~w~ %s\" str\nfree_memory str",
    "2305": "int year, month, day, hour, minute, second, milisecond\nyear, month, day, hour, minute, second, milisecond = get_file_write_time {fileName} \"root:\\cleo.asi\"\n\ndebug_on\ntrace \"CLEO.asi date is %04d-%02d-%02d %02d:%02d:%02d.%03d\" year month day hour minute second milisecond"
  },
  "imgui": {
    "2218": "if\n    imgui_button {buttonName} \"Press me!\" {width} 0.0 {height} 0.0\nthen\n    print_help_formatted {text} \"Button was pressed!\"\nend"
  },
  "math": {
    "2700": "int val = 0x100\nif\n    is_bit_set {number} val {bitIndex} 8 // 0-based indexing\nthen\n    ...\nend",
    "2705": "int bikeModel = pick_random_int {values} 581 462 521 463",
    "2706": "float heading = pick_random_float {values} 0.0 90.0 -90.0 180.0",
    "2707": "LongString greeting = pick_random_text {values} \"Hello!\" \"Hi there!\" \"Welcome!\"",
    "2708": "if\n    random_chance {percent} 33.333\nthen\n    print_help_string {text} \"1/3 chance\"\nend"
  },
  "memory": {
    "2400": "get_var_pointer 0@ {store_to} 5@\nget_var_pointer 1@ {store_to} 6@\n\ncopy_memory {src} 5@ {dest} 6@ {size} 2 // replace two bytes in 1@",
    "2401": "int ptr = get_this_script_struct\n\nint baseIp = read_memory_with_offset ptr {offset} 0x10 {size} 4 // get CRunningScript::BaseIP\nshortString name = read_memory_with_offset ptr {offset} 0x08 {size} 4 // get CRunningScript::Name",
    "2402": "get_vehicle_pointer 0@ {result} 5@\nwrite_memory_with_offset {address} 5@ {offset} 0x434 {size} 1 {value} 126 // set CVehicle::m_nPrimaryColor",
    "2404": "stream_custom_script \".\\other_script.s\"\nget_script_struct_just_created 11@\n\n// wait for script to finish\nwhile is_script_running 11@\n    wait 0\nend"
  },
  "text": {
    "2605": "while true\n   wait 0 // draw each frame\n   use_text_commands {state} true\n   display_text_formatted {offsetLeft} 50.0 {offsetTop} 100.0 {format} \"Simple text\"\n   display_text_formatted {offsetLeft} 50.0 {offsetTop} 200.0 {format} \"Timer: %d\" {args} TIMERA\nend",
    "2609": "int value = 250\nadd_text_label_formatted {dynamicKey} 'PRICE' {format} 'Price $%d' {args} value"
  }
}
